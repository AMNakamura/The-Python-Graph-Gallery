{"version":3,"file":"component---src-pages-histogram-js-296513134ec0e75cf1bd.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/histogram.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/histogram.html'>Histogram</a> represents the distribution of a numeric variable for one or several groups. The values are split in bins, each bin is represented as a bar. This page showcases many histograms built with python, using both the <code>seaborn</code> and the <code>matplotlib</code> libraries.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot the histogram thanks to the distplot function\nsns.distplot( a=df[\"sepal_length\"], hist=True, kde=False, rug=False )\n`\n\nconst quickCodeMatplotlib = `# library & dataset\nimport matplotlib.pyplot as plt\nhours = [17, 20, 22, 25, 26, 27, 30, 31, 32, 38, 40, 40, 45, 55]\n\n# Initialize layout\nfig, ax = plt.subplots(figsize = (9, 9))\n\n#plot\nax.hist(hours, bins=5, edgecolor=\"black\");\n`\n\nexport default function ViolinPlot() {\n\n  return (\n\n    <Layout title=\"Histogram\" isTocEnabled seoDescription=\"A collection of histogram examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Histogram\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick (Seaborn)\">&#9201; Quick start (Seaborn)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Seaborn</code> is definitely the best library to quickly build a histogram thanks to its <code>distplot()</code>.</p><p>Note the importance of the <code>bins</code> parameter: try several values to see which represents your data the best. ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/20-basic-histogram-seaborn\"}>\n              <ChartImage imgName=\"20_Basic_Histogram_seaborn2\"\n                caption=\"The most basic histogram one can make with python and seaborn\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Histogram charts with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. It is well adapted to build histogram thanks to\n          its <code>distplot</code> function. The following charts will guide you\n          through its usage, going from a very{\" \"}\n          <Link to=\"\">basic histogram</Link> to something much more{\" \"}\n          <Link to=\"\">customized</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn1\"\n            caption=\"The most basic histogram with seaborn. It adds a density on top by default\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn2\"\n            caption=\"Play with the bin parameter to control the number of bars\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist1\"\n            caption=\"Remove the density chart on top of the seaborn histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist2\"\n            caption=\"Add rug on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist3\"\n            caption=\"Customize the rug: color, size and more\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist4\"\n            caption=\"Customize the appearance of the density chart displayed on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"24_Histogram_with_boxplot_on_top\"\n            caption=\"How to split the chart window to display a boxplot on top of the histogram\"\n            linkTo=\"/24-histogram-with-a-boxplot-on-top-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables1\"\n            caption=\"Compare the distribution of several groups on the same chart\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables2\"\n            caption=\"Use small multiple to compare the distribution of several groups\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot1\"\n            caption=\"Histogram can be added around a scatterplot to show each variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot6\"\n            caption=\"Histogram can be added around a 2d density chart to show x and y variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Quick (matplotlib)\"><Matplotlib/> Quick start (Matplotlib)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><Link to=\"/matplotlib\">Matplotlib</Link> can also build decent histograms easily. It provides a <code>hist()</code> function that\n            accept a vector of numeric values as input.</p>\n            <p>It also provides all the options you can think of to customize the binning and the genreral appearance.</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/basic-histogram-in-matplotlib\"}>\n              <ChartImage imgName=\"basic-histogram-in-matplotlib\"\n                caption=\"The most basic histogram one can make with python and matplotlib\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCodeMatplotlib}</CodeChunk>\n      </Container>\n\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Histograms with <code>Matplotlib</code></h2>\n        <p>\n          As usual <Link to=\"/matplotlib\">matplotlib</Link> is perfectly skilled to build nice histogram, but require\n          some more work camparing to <Link to=\"/seaborn\">seaborn</Link> to get a good looking figure.\n        </p>\n        <p>The examples below should help you to get started with matplotlib histograms. They go from\n          a very <Link to=\"/basic-histogram-in-matplotlib\">basic version</Link> and then show how to customize it, like adding <Link to=\"/basic-histogram-in-matplotlib\">annotation</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"basic-histogram-in-matplotlib\"\n            caption=\"The most basic histogram with matplotlib.\"\n            linkTo=\"/basic-histogram-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-histogram-in-matplotlib2\"\n            caption=\"Reduce chart opacity and add annotation (median represented in vertical line)\"\n            linkTo=\"/basic-histogram-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"density-mirror-histogram\"\n            caption=\"Mirror density chart to compare the distribution of 2 variables\"\n            linkTo=\"/density-mirror\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","quickCodeMatplotlib","ViolinPlot","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Seaborn","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}