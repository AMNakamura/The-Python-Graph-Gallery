{"version":3,"file":"component---src-pages-plotly-js-567bb9d03ef9b96dc45a.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/plotly.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Plotly } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport ChartImageContainer from '../components/ChartImageContainer';\n\nconst chartDescription =\n  \"<p><code>Plotly</code> is a javascript library for data visualization. It is based on the famous <a href='https://www.d3-graph-gallery.com'>d3.js</a> library, and provides a python wrapper allowing to build stunning interactive charts directly from <code>Python</code>. Most of the gallery sections provide <code>plotly</code> examples, this post provides a few general tips.</p>\";\n\nconst quickCode = `# library\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create data\nx=range(1,6)\ny=[1,4,6,8,4]\n\n# Area plot\nplt.fill_between(x, y)\nplt.show()\n`;\n\nconst saveCode = `fig.write_html(\"the/path/to/chart-name.html\")`;\nconst embedCode = `<iframe\n  src=\"the/path/to/chart-name.html\"\n  width=\"800\"\n  height=\"600\"\n  title=\"chart name\"\n  style=\"border:none\">\n</iframe>`;\n\nexport default function Plotlys() {\n  return (\n    <Layout\n      title=\"Plotly\"\n      isTocEnabled\n      seoDescription=\"An overview of the plotly python library for interactive data visualization\"\n    >\n      <TitleAndDescription title=\"Plotly\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>Matplotlib</code> is the most famous python data\n              visualization library. It is widely used and most of other viz\n              libraries (like <code>seaborn</code>) are actually built on top of\n              it.\n            </p>\n            <p>\n              Once installed, matplotlib must be imported, usually using{' '}\n              <code>import matplotlib.pyplot as plt</code>. You can then use use\n              the functions available in the <code>plt</code> object.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/240-basic-area-chart'}>\n              <ChartImage\n                imgName=\"240_basic_area_chart\"\n                caption=\"The most basic area chart one can make with python and matplotlib\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Save\">&#9201; Saving a plotly chart</h2>\n        <p>\n          Once you've created a <code>plotly</code> chart you probably want to\n          save it as a standalone <code>html</code> file in order to share it or\n          embed it in another webpage.\n        </p>\n        <p>\n          This is the code allowing to save a <code>plotly</code> chart. You can\n          read the full process{' '}\n          <Link to=\"/parallel-coordinate-plot-plotly\">here</Link> for instance.\n        </p>\n        <CodeChunk>{saveCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Embed\">&#9201; Embeding a plotly chart</h2>\n        <p>\n          Once the chart has been saved, you can embed it in a html document\n          using:\n        </p>\n        <CodeChunk>{embedCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">\n          <Plotly />\n          Plotly graph gallery\n        </h2>\n        <p>Here is a glimpse of the plotly charts showcased in the gallery:</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-1\"\n            caption=\"Most basic scatterplot with plotly\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-2\"\n            caption=\"Plotly scatterplot with several levels of grouping\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-3\"\n            caption=\"Plotly scatterplot with a trend line\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"514-interactive-line-chart-plotly-1\"\n            caption=\"Basic interactive line chart with plotly\"\n            linkTo=\"/514-interactive-line-chart-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"514-interactive-line-chart-plotly-2\"\n            caption=\"How to customize the appearance of a plotly line chart\"\n            linkTo=\"/514-interactive-line-chart-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"514-interactive-line-chart-plotly-3\"\n            caption=\"Interactive line chart with multiple groups\"\n            linkTo=\"/514-interactive-line-chart-plotly\"\n          />\n        </Row>\n\n        <div className=\"mx-auto\">\n          <iframe\n            src=\"/interactiveCharts/parallel-coordinate-plot-plotly.html\"\n            title=\"parallel coordinate chart with plotly\"\n            style={{ border: 'none', width: '800px', height: '500px' }}\n          ></iframe>\n        </div>\n        <Link to=\"/parallel-coordinate-plot-plotly\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","saveCode","embedCode","Plotlys","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Plotly","src","style","border","width","height","Button","size","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}