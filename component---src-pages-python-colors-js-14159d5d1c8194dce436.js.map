{"version":3,"file":"component---src-pages-python-colors-js-14159d5d1c8194dce436.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/python-colors.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script\n        id=\"adthrive\"\n        strategy=\"post-hydrate\"\n        src={getAdThriveScriptUrl()}\n      />\n    </>\n  );\n};\n\n// Tried the idle strategy for AdThrive script put reported as unperformant by Raptive.\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport ChartImage from '../components/ChartImage';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  '<p>A section about how to manage colors with Python. Coming soon.';\n\nconst quickCode = `# libraries\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n# Dataset\ndf=pd.DataFrame({'X': range(1,101), 'Y': np.random.randn(100)*15+range(1,101), 'Z': (np.random.randn(100)*15+range(1,101))*2 })\n\n# plot\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df['X'], df['Y'], df['Z'], c='skyblue', s=60)\nax.view_init(30, 185)\nplt.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Tips about colors with Python\"\n    seoDescription=\"How to manage colors in python charts\"\n  />\n);\n\nexport default function Colors() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Colors\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>Coming soon</Col>\n          <Col md={6}>\n            <Link to={'/370-3d-scatterplot'}>\n              <ChartImage\n                imgName=\"370_3D_scatterplot\"\n                caption=\"Basic 3d scatterplot with Python & Matplotlib.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <Link to=\"/341-python-gapminder-animation\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Soon\">\n          <Matplotlib />\n          Oh No!\n        </h2>\n        <p>This section is not available yet! But it is coming soon.</p>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","content","property","Script","id","strategy","src","chartDescription","quickCode","Head","Colors","Layout","isTocEnabled","TitleAndDescription","description","Container","Row","Col","md","Link","to","CodeChunk","Button","size","Spacing","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}