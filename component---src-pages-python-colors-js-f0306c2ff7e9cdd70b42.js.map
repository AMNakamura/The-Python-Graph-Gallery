{"version":3,"file":"component---src-pages-python-colors-js-f0306c2ff7e9cdd70b42.js","mappings":"4MAMA,MAAMA,EAAU,CACd,iBACA,yBACA,wBAKa,SAASC,EAAUC,GAAwB,IAAvB,QAAEC,EAAO,QAAEC,GAASF,EACrD,GAAIF,EAAQK,SAASF,GACnB,OAAOG,EAAAA,cAAA,SAAG,QAGZ,MAgBMC,GAhBOC,EAAAA,EAAAA,IAAe,cAgBTC,QAAQC,MAAMC,MAAMC,GAC9BA,EAAEC,KAAKC,KAAKT,SAASF,KAG9B,OAAKI,EAMHD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKS,UAAU,uBACbT,EAAAA,cAACU,EAAAA,EAAW,CACVT,MAAOA,EAAMM,KAAKI,gBAAgBC,gBAClCC,IAAKf,EACLW,UAAU,kBAEXX,GACCE,EAAAA,cAAA,OAAKS,UAAU,qBACbT,EAAAA,cAAA,OAAKS,UAAU,yBACbT,EAAAA,cAAA,SAAIF,OAfP,IAsBX,C,kNChDA,MAAMgB,EACJ,oEAEIC,EAAS,wbAiBA,SAASC,IAEtB,OAEEhB,EAAAA,cAACiB,EAAAA,EAAM,CAACC,MAAM,gCAAgCC,cAAY,EAACC,eAAe,yCAGxEpB,EAAAA,cAACqB,EAAAA,EAAmB,CAClBH,MAAM,SACNI,YAAaR,IAGfd,EAAAA,cAACuB,EAAAA,EAAS,KACRvB,EAAAA,cAAA,MAAIwB,GAAG,SAAQ,iBACfxB,EAAAA,cAACyB,EAAAA,EAAG,CAAChB,UAAU,sBACbT,EAAAA,cAAC0B,EAAAA,EAAG,CAACC,GAAI,GAAG,eAGZ3B,EAAAA,cAAC0B,EAAAA,EAAG,CAACC,GAAI,GACP3B,EAAAA,cAAC4B,EAAAA,GAAI,CAACC,GAAI,uBACR7B,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAAQ,qBAClBC,QAAQ,sDAIhBE,EAAAA,cAAC8B,EAAAA,EAAS,KAAEf,GACZf,EAAAA,cAAC4B,EAAAA,GAAI,CAACC,GAAG,mCACP7B,EAAAA,cAAC+B,EAAAA,EAAM,CAACC,KAAK,MAAK,cAItBhC,EAAAA,cAACiC,EAAAA,EAAO,MAERjC,EAAAA,cAACuB,EAAAA,EAAS,KACRvB,EAAAA,cAAA,MAAIwB,GAAG,QAAOxB,EAAAA,cAACkC,EAAAA,GAAU,MAAG,UAC5BlC,EAAAA,cAAA,SAAG,8DAKLA,EAAAA,cAACiC,EAAAA,EAAO,MAERjC,EAAAA,cAAA,OAAKS,UAAU,cAAce,GAAG,WAC9BxB,EAAAA,cAACuB,EAAAA,EAAS,KACRvB,EAAAA,cAACmC,EAAAA,EAAkB,CAACC,YAAY,cAIpCpC,EAAAA,cAACiC,EAAAA,EAAO,MAERjC,EAAAA,cAACuB,EAAAA,EAAS,KACRvB,EAAAA,cAACqC,EAAAA,EAAO,OAGVrC,EAAAA,cAACiC,EAAAA,EAAO,MAId,C","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/pages/python-colors.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport { Button, Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport Spacing from \"../components/Spacing\";\nimport ChartImage from \"../components/ChartImage\";\n\nconst chartDescription =\n  \"<p>A section about how to manage colors with Python. Coming soon.\";\n\nconst quickCode = `# libraries\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n# Dataset\ndf=pd.DataFrame({'X': range(1,101), 'Y': np.random.randn(100)*15+range(1,101), 'Z': (np.random.randn(100)*15+range(1,101))*2 })\n\n# plot\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df['X'], df['Y'], df['Z'], c='skyblue', s=60)\nax.view_init(30, 185)\nplt.show()\n`\n\nexport default function Colors() {\n\n  return (\n\n    <Layout title=\"Tips about colors with Python\" isTocEnabled seoDescription=\"How to manage colors in python charts\">\n\n\n      <TitleAndDescription\n        title=\"Colors\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            Coming soon\n          </Col>\n          <Col md={6}>\n            <Link to={\"/370-3d-scatterplot\"}>\n              <ChartImage imgName=\"370_3D_scatterplot\"\n                caption=\"Basic 3d scatterplot with Python & Matplotlib.\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <Link to=\"/341-python-gapminder-animation\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Soon\"><Matplotlib />Oh No!</h2>\n        <p>\n          This section is not available yet! But it is coming soon.\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","chartDescription","quickCode","Colors","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","Col","md","Link","to","CodeChunk","Button","size","Spacing","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}