"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[3396],{7128:function(e,t,a){a.d(t,{Z:function(){return c}});var l=a(7294),n=a(4160),r=a(8032);const i=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function c(e){let{imgName:t,caption:a}=e;if(i.includes(t))return l.createElement("p",null,"TODO");const c=(0,n.K2)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return c?l.createElement(l.Fragment,null,l.createElement("div",{className:"chartImageContainer"},l.createElement(r.G,{image:c.node.childImageSharp.gatsbyImageData,alt:a,className:"chartImageImg"}),a&&l.createElement("div",{className:"chartImageOverlay"},l.createElement("div",{className:"chartImageOverlayText"},l.createElement("p",null,a))))):null}},4596:function(e,t,a){a.d(t,{Z:function(){return c}});var l=a(7294),n=a(7128),r=a(1555),i=a(4160);function c(e){let{imgName:t,caption:a,linkTo:c}=e;return l.createElement(r.Z,{xs:12,md:4},l.createElement(i.rU,{to:c},l.createElement(n.Z,{imgName:t,caption:a})))}},44:function(e,t,a){a.r(t),a.d(t,{default:function(){return w}});var l=a(7294),n=a(429),r=a(1433),i=a(682),c=a(8728),o=a(4051),m=a(4596),s=a(8742),p=a(4160),u=a(4125),h=a(7128),d=a(1555),f=a(5005),E=a(2737),b=a(3921);const g=l.createElement(l.Fragment,null,l.createElement("p",null,"A ",l.createElement("a",{href:"https://www.data-to-viz.com"},"Waffle Chart")," represents categorical data using a ",l.createElement("b",null,"grid")," of ",l.createElement("b",null,"equally sized squares")," or rectangles, each colored or shaded to depict different categories or segments."),l.createElement("p",null,"Python enables the creation of waffle charts through the"," ",l.createElement("code",null,"PyWaffle"),"library. This page offers numerous examples of charts built using the PyWaffle library, ranging from ",l.createElement("b",null,"basic")," implementations to more"," ",l.createElement("b",null,"advanced")," customizations.")),y="# useful libraries, including pyWaffle\nimport matplotlib.pyplot as plt\nfrom pywaffle import Waffle\n\n# create simple dummy data\ndata = {'Kevin': 10, 'Joseph': 7, 'Yan': 8}\n\n# Basic waffle\nplt.figure(\n  FigureClass=Waffle,\n  rows=5,\n  columns=20,\n  values=data,\n  legend={'loc': 'upper left', 'bbox_to_anchor': (1.05, 1)},\n)\nplt.show()\n".trim();function w(){return l.createElement(r.Z,{title:"Waffle chart",isTocEnabled:!0,seoDescription:"A collection of Waffle chart examples made with Python and the PyWaffle library, coming with explanation and reproducible code"},l.createElement(n.Z,{title:"Waffle chart",description:g}),l.createElement(i.Z,null,l.createElement("h2",{id:"Quick"},"‚è± Quick start"),l.createElement(o.Z,{className:"align-items-center"},l.createElement(d.Z,{md:6},l.createElement("p",null,"The PyWaffle library allows to build a waffle chart easily thanks to its ",l.createElement("code",null,"Waffle")," class."),l.createElement("p",null,"The input data you must provide is an array of numbers, where each numbers will be mapped to one of the pie item.üî•")),l.createElement(d.Z,{md:6},l.createElement(p.rU,{to:"/pie-plot-matplotlib-basic"},l.createElement(h.Z,{imgName:"503-waffle-chart-introduction-1",caption:"Most basic donut chart with Python and Matplotlib"})))),l.createElement(E.Z,null,y)),l.createElement(b.Z,null),l.createElement("div",{className:"greySection"},l.createElement(i.Z,null,l.createElement("h2",{id:"Warning"},"‚ö†Ô∏è Mind the pie chart"),l.createElement("p",null,"Pie chart is probably the most criticized chart type. Humans are pretty bad at reading angles, making it hard to rank the groups accurately. Most of the time, it is better to display the information as a ",l.createElement(p.rU,{to:"/barplot"},"barchart"),", a"," ",l.createElement(p.rU,{to:"/treemap"},"treemap")," or a"," ",l.createElement(p.rU,{to:"/lollipop-plot"},"lollipop")," plot."),l.createElement("p",null,"Have a look to the 3 pie charts below, can you spot the pattern hidden in it?"),l.createElement("div",{style:{maxWidth:"600px",margin:"0 auto"}},l.createElement("a",{href:"https://www.data-to-viz.com/caveat/pie.html"},l.createElement(h.Z,{imgName:"pieChartIssue",caption:"Can you spot the pattern hidden behind those 3 pie charts? Click to see the same info visualized as barplots: much more insightful isn't it?"}))),l.createElement("a",{href:"https://www.data-to-viz.com/caveat/pie.html"},l.createElement(f.Z,{size:"sm"},"See it as a barplot")),l.createElement("p",null,"Last but not least, please avoid the ",l.createElement("code",null,"explode")," and"," ",l.createElement("code",null,"shadow")," options of the pie() function, they are killing all the most basic dataviz principles."))),l.createElement(b.Z,null),l.createElement(i.Z,null,l.createElement("h2",{id:"Matplotlib"},l.createElement(u.rS,null),"Pie chart with ",l.createElement("code",null,"Matplotlib")),l.createElement("p",null,"The examples below should guide you through the ",l.createElement("code",null,"pie()")," ","function usage. It starts basics and then show how to add labels, customize colors and more."),l.createElement(o.Z,null,l.createElement(m.Z,{imgName:"pie-plot-matplotlib-basic-add-labels",caption:"Add and customize the labels",linkTo:"/pie-plot-matplotlib-basic"}),l.createElement(m.Z,{imgName:"pie-plot-matplotlib-basic-add-padding",caption:"Customize the pie section colors",linkTo:"/pie-plot-matplotlib-basic"}),l.createElement(m.Z,{imgName:"pie-plot-matplotlib-basic-colors",caption:"Add blank space between each pie section.",linkTo:"/pie-plot-matplotlib-basic"}))),l.createElement(b.Z,null),l.createElement("div",{className:"greySection",id:"related"},l.createElement(i.Z,null,l.createElement(s.Z,{chartFamily:"partOfAWhole"}))),l.createElement(b.Z,null),l.createElement(i.Z,null,l.createElement(c.Z,null)),l.createElement(b.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-waffle-chart-js-13e876f8c82f76d437dd.js.map