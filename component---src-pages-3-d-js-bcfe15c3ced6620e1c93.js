"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[7626],{9935:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(7294),l=a(5444),o=a(1496),i=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function r(e){var t=e.imgName,a=e.caption;if(i.includes(t))return n.createElement("p",null,"TODO");var r=(0,l.useStaticQuery)("3289484431").allFile.edges.find((function(e){return e.node.name.includes(t)}));return r?n.createElement(n.Fragment,null,n.createElement("div",{className:"chartImageContainer"},n.createElement(o.Z,{alt:a,fluid:r.node.childImageSharp.fluid,className:"chartImageImg"}),n.createElement("div",{className:"chartImageOverlay"},n.createElement("div",{className:"chartImageOverlayText"},n.createElement("p",null,a))))):null}},7834:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(7294),l=a(9935),o=a(7408),i=a(5444);function r(e){var t=e.imgName,a=e.caption,r=e.linkTo;return n.createElement(o.Z,{xs:12,md:4},n.createElement(i.Link,{to:r},n.createElement(l.Z,{imgName:t,caption:a})))}},2073:function(e,t,a){a.r(t),a.d(t,{default:function(){return w}});var n=a(7294),l=a(1006),o=a(3203),i=a(6187),r=a(7567),c=a(994),m=a(9869),s=a(5444),d=a(3727),u=a(7408),p=a(6594),h=a(3026),E=a(458),f=a(9935),g=a(7834),b=a(3469);function w(){return n.createElement(o.Z,{title:"Three-Dimensional plotting",isTocEnabled:!0,seoDescription:"A collection of 3d chart examples made with Python, coming with explanation and reproducible code"},n.createElement(l.Z,{title:"Three-Dimensional plotting",description:"<p>Python allows to build 3D charts thanks to the <code>mplot3d</code> toolkit of the <code>matplotlib</code> library. However, please note that 3d charts are most often a bad practice. This section focuses on 3d scatter plots and surface plots that are some interesting use cases."}),n.createElement(i.Z,null,n.createElement("h2",{id:"Quick"},"⏱ Quick start"),n.createElement(c.Z,{className:"align-items-center"},n.createElement(u.Z,{md:6},n.createElement("p",null,"The ",n.createElement("code",null,"mplot3d")," toolkit of ",n.createElement("code",null,"matplotlib")," is used here."),n.createElement("ul",null,n.createElement("li",null,"The projection parameter of the add_subplot() function is set to ",n.createElement("code",null,"3d")),n.createElement("li",null,"The usual ",n.createElement("code",null,"scatter()")," function can now be called with 3 data inputs for the X, Y and Z axis"),n.createElement("li",null,"The camera position can be set thanks to the ",n.createElement("code",null,"view_init()")," function"))),n.createElement(u.Z,{md:6},n.createElement(s.Link,{to:"/370-3d-scatterplot"},n.createElement(f.Z,{imgName:"370_3D_scatterplot",caption:"Basic 3d scatterplot with Python & Matplotlib."})))),n.createElement(h.Z,null,"# libraries\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n# Dataset\ndf=pd.DataFrame({'X': range(1,101), 'Y': np.random.randn(100)*15+range(1,101), 'Z': (np.random.randn(100)*15+range(1,101))*2 })\n\n# plot\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df['X'], df['Y'], df['Z'], c='skyblue', s=60)\nax.view_init(30, 185)\nplt.show()\n"),n.createElement(s.Link,{to:"/341-python-gapminder-animation"},n.createElement(p.Z,{size:"sm"},"See code"))),n.createElement(E.Z,null),n.createElement("div",{className:"greySection"},n.createElement(i.Z,null,n.createElement("h2",{id:"Warning"},"⚠️ Mind the 3d"),n.createElement("p",null,"Three dimensional objects are very popular but negatively affect the ",n.createElement("u",null,"accuracy")," and ",n.createElement("u",null,"speed")," at which one can interpret a graphic in most cases."),n.createElement("p",null,"In the example below, the brown section in front looks much bigger than the pink section in the back, even tough their real values are 30% vs 35%. Data is distorted."),n.createElement("div",{style:{maxWidth:"350px",margin:"0 auto"}},n.createElement("a",{href:"https://www.data-to-viz.com/caveat/3d.html"},n.createElement(f.Z,{imgName:"3d_is_bad",caption:"An example of a bad 3d pie chart"}))),n.createElement("a",{href:"https://www.data-to-viz.com/caveat/3d.html"},n.createElement(p.Z,{size:"sm"},"Full article")),n.createElement("br",null),n.createElement("br",null),n.createElement("p",null,n.createElement("u",null,"Note"),": remember pie charts should be avoided ",n.createElement("a",{href:"https://www.data-to-viz.com/caveat/pie.html"},"most of the time")))),n.createElement(E.Z,null),n.createElement(i.Z,null,n.createElement("h2",{id:"3d scatterplot"},n.createElement(d.rS,null),"Three-dimensional scatterplots with ",n.createElement("code",null,"Matplotlib")),n.createElement("p",null,"As described in the quick start section above, a three dimensional can be built with python thanks to the",n.createElement("code",null,"mplot3d")," toolkit of ",n.createElement("code",null,"matplotlib"),". The example below will guide you through its usage to get this figure:"),n.createElement("div",{style:{maxWidth:"450px"}},n.createElement(s.Link,{to:"/370-3d-scatterplot"},n.createElement(f.Z,{imgName:"370_3D_scatterplot",caption:"Basic 3d scatterplot with Python & Matplotlib."}))),n.createElement("p",null,"This technique is useful to visualize the result of a PCA (Principal Component Analysis). The following example explains how to run a PCA with python and check its result with a 3d scatterplot:"),n.createElement("div",{style:{maxWidth:"450px"}},n.createElement(s.Link,{to:"/372-3d-pca-result"},n.createElement(f.Z,{imgName:"372_3D_PCA_result",caption:"PCA result shown as a 3D scatterplot with python"})))),n.createElement(E.Z,null),n.createElement(i.Z,null,n.createElement("h2",{id:"Surface plot"},n.createElement(d.rS,null),"Surface plot with ",n.createElement("code",null,"Matplotlib")),n.createElement("p",null,"A surface plot considers the X and Y coordinates as latitude and longitude, and Z as the altitude. It represents the dataset as a surface by interpolating positions between data points."),n.createElement("p",null,"This kind of chart can also be done thanks to the ",n.createElement("code",null,"mplot3d")," toolkit of ",n.createElement("code",null,"matplotlib"),". The posts linked below explain how to use and customize the ",n.createElement("code",null,"trisurf()")," function that is used for surface plots."),n.createElement(c.Z,null,n.createElement(g.Z,{imgName:"371_3D_Surface_plot_volcano_1",caption:"Most basic surface plot with Python",linkTo:"/371-surface-plot"}),n.createElement(g.Z,{imgName:"371_3D_Surface_plot_volcano_2",caption:"Plotting only one half of the heatmap",linkTo:"/371-surface-plot"}),n.createElement(g.Z,{imgName:"371_3D_Surface_plot_volcano_3",caption:"Seaborn heatmap customization: grid",linkTo:"/371-surface-plot"})),n.createElement("div",{style:{maxWidth:"450px",margin:"0 auto"}},n.createElement(s.Link,{to:"/371-surface-plot"},n.createElement(f.Z,{imgName:"371_3D_Surface_plot_volcano_4",caption:"Basic 3d scatterplot with Python & Matplotlib."})))),n.createElement(E.Z,null),n.createElement(i.Z,null,n.createElement("h2",{id:"Animated 3d"},n.createElement(d.rS,null),"Three dimensional plot and animation"),n.createElement("p",null,"You can build an animation from a 3d chart by changing the camera position at each iteration of a loop. The example below explains how to do it for a surface plot but visit the animation section for more."),n.createElement(s.Link,{to:"/342-animation-on-3d-plot"},n.createElement("img",{src:b.Z,alt:"Animated volcano plot with Python",style:{maxWidth:"900px",width:"100%"}})),n.createElement(s.Link,{to:"/animation"},n.createElement(p.Z,{size:"sm"},"Animation section"))),n.createElement(E.Z,null),n.createElement("div",{className:"greySection",id:"related"},n.createElement(i.Z,null,n.createElement(m.Z,{chartFamily:"general"}))),n.createElement(E.Z,null),n.createElement(i.Z,null,n.createElement(r.Z,null)),n.createElement(E.Z,null))}},3469:function(e,t,a){t.Z=a.p+"static/animated_volcano-df4d07818ba89edb4168e26f0160cdf4.gif"}}]);
//# sourceMappingURL=component---src-pages-3-d-js-bcfe15c3ced6620e1c93.js.map