{"version":3,"file":"component---src-pages-histogram-js-e260fcd996cbb0fae1ea.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ToggleButton.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://the-python-graph-gallery/./src/util/functionDescriptions.js","webpack://the-python-graph-gallery/./src/components/FunctionExploration.js","webpack://the-python-graph-gallery/./src/pages/histogram.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={caption}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","export const functionDescriptions = {\n    kdeplot: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"fill\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'control the color', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    },\n    violin: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.violinplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"width\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'controls the color', type: 'string', relatedChart: '70_deffffed' }\n        ]\n    }\n}\n\n\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport { functionDescriptions } from \"../util/functionDescriptions\";\nimport './functionExploration.css'\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport default function FunctionExploration({ functionName }) {\n\n    // Get the right function\n    const functionInfo = functionDescriptions[functionName]\n\n    // Get the right parameter\n    const [selectedParameter, setSelectedParameter] = React.useState(functionInfo.parameters[0].name)\n    const selectedParameterInfo = functionInfo.parameters.filter(param => param.name === selectedParameter)[0]\n\n    const allButtons = functionInfo.parameters.map(\n        (item, i) =>\n            <ToggleButton\n                type=\"radio\"\n                active={true}\n                key={i}\n                className={\"functionButton\"}\n                variant=\"secondary\"\n                size=\"sm\"\n                value={item.name}\n                checked={selectedParameter === item.name}\n                onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n            >\n                {item.name}\n            </ToggleButton>\n    )\n\n    return (\n        <>\n            <h2 id={capitalize(functionName + \"()\" + \" details\")}>&#128270; <code>{functionName}</code> function parameters<a style={{ marginLeft: \"15px\", fontSize: \"14px\" }} href={functionInfo.docUrl}>&rarr; see full doc</a></h2>\n            <ButtonGroup toggle>{allButtons}</ButtonGroup>\n            <div>\n                <code>string</code>\n                <span>&rarr; {selectedParameterInfo.description}</span>\n            </div>\n            {/* <div style={{ paddingLeft: \"6px\", fontSize: \"14px\" }}><Link to={selectedParameterInfo.relatedChart}>check a chart using it</Link></div> */}\n            <br />\n            <br />\n        </>\n    )\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport FunctionExploration from '../components/FunctionExploration'\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>Histograms allow to visualize the distribution of a numeric variable for one or several groups. The values are split in bins, each bin is represented as a bar.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot the histogram thanks to the distplot function\nsns.distplot( a=df[\"sepal_length\"], hist=True, kde=False, rug=False )\n`\n\nexport default function ViolinPlot() {\n\n  return (\n\n    <Layout title=\"Histogram\" isTocEnabled seoDescription=\"A collection of histogram examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Histogram\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Seaborn</code> is definitely the best library to quickly build a histogram thanks to its <code>distplot()</code>.</p><p>Note the importance of the <code>bins</code> parameter: try several values to see which represents your data the best. 🔥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/20-basic-histogram-seaborn\"}>\n              <ChartImage imgName=\"20_Basic_Histogram_seaborn2\"\n                caption=\"The most basic histogram one can make with python and seaborn\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Histogram charts with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. It is well adapted to build histogram thanks to\n          its <code>distplot</code> function. The following charts will guide you\n          through its usage, going from a very{\" \"}\n          <Link to=\"\">basic histogram</Link> to something much more{\" \"}\n          <Link to=\"\">customized</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn1\"\n            caption=\"The most basic histogram with seaborn. It adds a density on top by default\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn2\"\n            caption=\"Play with the bin parameter to control the number of bars\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist1\"\n            caption=\"Remove the density chart on top of the seaborn histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist2\"\n            caption=\"Add rug on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist3\"\n            caption=\"Customize the rug: color, size and more\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist4\"\n            caption=\"Customize the appearance of the density chart displayed on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"24_Histogram_with_boxplot_on_top\"\n            caption=\"How to split the chart window to display a boxplot on top of the histogram\"\n            linkTo=\"/24-histogram-with-a-boxplot-on-top-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables1\"\n            caption=\"Compare the distribution of several groups on the same chart\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables2\"\n            caption=\"Use small multiple to compare the distribution of several groups\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot1\"\n            caption=\"Histogram can be added around a scatterplot to show each variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot6\"\n            caption=\"Histogram can be added around a 2d density chart to show x and y variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"density-mirror-histogram\"\n            caption=\"Mirror density chart to compare the distribution of 2 variables\"\n            linkTo=\"/density-mirror\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration functionName={\"violin\"} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["_excluded","noop","ToggleButton","_ref","ref","children","name","className","checked","type","onChange","value","disabled","inputRef","props","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","undefined","active","as","autoComplete","onFocus","onBlur","displayName","allGifs","ChartImage","imgName","caption","includes","image","useStaticQuery","allFile","edges","find","n","node","alt","fluid","childImageSharp","ChartImageContainer","linkTo","xs","md","Link","to","ButtonGroup","bsPrefix","size","toggle","vertical","_ref$as","Component","rest","prefix","baseClass","defaultProps","role","functionDescriptions","kdeplot","description","docUrl","basicUsage","parameters","relatedChart","violin","FunctionExploration","s","functionName","functionInfo","React","selectedParameter","setSelectedParameter","selectedParameterInfo","filter","param","allButtons","map","item","i","key","variant","currentTarget","id","charAt","toUpperCase","slice","style","marginLeft","fontSize","href","ViolinPlot","title","isTocEnabled","seoDescription","chartFamily"],"sourceRoot":""}