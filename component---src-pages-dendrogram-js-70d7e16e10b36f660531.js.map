{"version":3,"file":"component---src-pages-dendrogram-js-70d7e16e10b36f660531.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/dendrogram.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import \"./chartFamilySection.css\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SectionLogoWithOverlay from \"./SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n\nconst TITLES = {\n  distribution: \"Distribution\",\n  correlation: \"Correlation\",\n  ranking: \"Ranking\",\n  partOfAWhole: \"Part Of A Whole\",\n  evolution: \"Evolution\",\n  map: \"Map\",\n  flow: \"Flow\",\n  general: \"General Knowledge\",\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <h2 id=\"Related charts\" className={\"sectionTitle \" + chartFamily}>{TITLES?.[chartFamily]}</h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import \"./sectionLogoWithOverlay.css\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport SectionLogo from \"./SectionLogo\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\n\nconst generalList = chartTypesInfo\n  .filter(info => info.family === \"general\")\n  .map(info => info.logo)\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType)\n\n  return (\n    <>\n      { !isGeneralFamily ? (<>\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n            <div className=\"sectionLogoOverlay\">\n              <div className=\"sectionLogoOverlayText\">+</div>\n            </div>\n          </Link>\n        </div>\n        <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n      </>) : (\n        <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n            </Link>\n            <p className=\"distributionSection sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import \"./titleAndDescription.css\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport SocialMediaButtons from \"./SocialMediaButtons\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"gatsby\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\";\nimport { fullUrlToInternalLink } from \"../util/utils\";\n// import Sponsors from \"../components/Sponsors\";\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <>\n      <div className=\"titleAndDescription\">\n        <h1 className=\"mainTitle\">{title}</h1>\n        <hr className=\"smallHr\" />\n        <SocialMediaButtons />\n        <div\n          className=\"description\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        />\n        {chartType && (\n          <div style={{ marginTop: \"10px\" }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + \" section\"}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n      {/* <Sponsors /> */}\n    </>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  chartType: PropTypes.string\n};\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Seaborn } from \"../components/MiscellaneousLogos\"\nimport ChartImage from \"../components/ChartImage\";\nimport { Button } from \"react-bootstrap\";\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/dendrogram.html'>dendrogram</a> is a network structure. It is constituted of a root node that gives birth to several nodes connected by edges or branches. It is used to represent a hierarchical structure or to display the result of a clustering algorithm.</p>\";\n\n\nexport default function Dendrogram() {\n\n  return (\n\n    <Layout title=\"Dendrogram\" isTocEnabled seoDescription=\"A collection of dendrogram examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Dendrogram\"\n        description={chartDescription}\n      />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"What is it?\">&#8505; &#65039; Two types of dendrogram</h2>\n          <p>It is important to understand that dendrograms are used in 2 very\n            different conditions that are based on 2 different data inputs:</p>\n          <ul>\n            <li><u>Hierarchical dataset</u>: think about a CEO managing team leads managing employees and so on.</li>\n            <li><u>Clustering result</u>: clustering divides a set of individuals in group\n            according to their similarity. Its result can be visualized as a tree, often going together with a heatmap.</li>\n          </ul>\n          <a href=\"https://www.data-to-viz.com/graph/dendrogram.html\">\n            <Button size=\"sm\">Read more about dendrogram</Button>\n          </a>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Clustering & Matplotlib\"><Matplotlib />Dendrogram for clustering with <code>Matplotlib</code></h2>\n        <p>\n          The <Link to='/400-basic-dendrogram'>first chart</Link> of this section explains how to build a basic dendrogram with Python and\n          <code>matplotlib</code>. It starts from a numeric matrix, compute the similarity between each pair of item\n          thanks to the <code>linkage()</code> function and plot the result with the <code>dendrogram()</code> function.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"400_Basic_Dendrogram\"\n            caption=\"Most basic dendrogram and clustering with Python and Matplotlib\"\n            linkTo=\"/401-customised-dendrogram\"\n          />\n        </Row>\n        <p>The next post explains how to customize the output: change node and edge features like color\n          and shapes, select a specific part of the tree and more.</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"401_custom_Dendrogram2\"\n            caption=\"Most basic dendrogram and clustering with Python and Matplotlib\"\n            linkTo=\"/400-basic-dendrogram\"\n          />\n          <ChartImageContainer\n            imgName=\"401_custom_Dendrogram6\"\n            caption=\"Horizontal dendrogram\"\n            linkTo=\"/401-customised-dendrogram\"\n          />\n          <ChartImageContainer\n            imgName=\"401_custom_Dendrogram5\"\n            caption=\"Cut the dendrogram at a specific height\"\n            linkTo=\"/401-customised-dendrogram\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Clustering & Seaborn\"><Seaborn />Dendrogram, clustering and heatmaps with <code>Seaborn</code></h2>\n        <p>\n          It is very common to display the results of a clustering using a <Link to=\"/heatmap\">heatmap</Link>\n          with dendrograms around it. Fortunately the <code>Seaborn</code> library makes it a breeze.\n        </p>\n        <p>The examples below will guide you through the most usual needs. Note however that data\n        normalization should be your main focus here, as it can massively impact the final\n        visual result. (See <Link to=\"/404-dendrogram-with-heat-map\">this post</Link> for that).\n        </p>\n        <Link to=\"/heatmap\">\n          <Button size=\"sm\">Related: heatmap section</Button>\n        </Link>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <Link to='/405-dendrogram-with-heatmap-and-coloured-leaves'>\n            <ChartImage imgName={'405_Dendro_and_heatmap_and_rowcolor'} caption={'A seaborn heatmap with clusterization and dendrogram applied'} />\n          </Link>\n        </div>\n        <Row>\n          <ChartImageContainer\n            imgName=\"404_Dendro_and_heatmap3\"\n            caption=\"Most basic heatmap with dendrogram with seaborn\"\n            linkTo=\"/404-dendrogram-with-heat-map\"\n          />\n          <ChartImageContainer\n            imgName=\"404_Dendro_and_heatmap9\"\n            caption=\"Change color palette\"\n            linkTo=\"/404-dendrogram-with-heat-map\"\n          />\n          <ChartImageContainer\n            imgName=\"404_Dendro_and_heatmap11\"\n            caption=\"Learn how to normalize data in the heatmap, avoiding that kind of result\"\n            linkTo=\"/404-dendrogram-with-heat-map\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Hierarchichal\">Dendrogram for hierarchical datasets</h2>\n        <p>\n          Dendrogram can also be used to display a hierarchy. A hierarchy as a root node that gets divided\n          in several children and so on.\n        </p>\n        <p>TODO</p>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"partOfAWhole\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","SectionLogoWithOverlay","chartType","logo","caption","label","className","Row","allGifs","ChartImage","imgName","includes","image","useStaticQuery","allFile","edges","find","n","node","name","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Link","to","generalList","info","isGeneralFamily","SectionLogo","TitleAndDescription","title","description","chartInfo","SocialMediaButtons","dangerouslySetInnerHTML","__html","style","marginTop","Button","size","href","dataToVizURL","chartDescription","Dendrogram","Layout","isTocEnabled","seoDescription","Container","Spacing","Matplotlib","Seaborn","maxWidth","margin","padding","Contact","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}