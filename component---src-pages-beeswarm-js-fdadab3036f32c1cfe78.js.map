{"version":3,"file":"component---src-pages-beeswarm-js-fdadab3036f32c1cfe78.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/beeswarm.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script id=\"adthrive\" strategy=\"idle\" src={getAdThriveScriptUrl()} />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      A <a href=\"https://www.data-to-viz.com\">beeswarm plot</a> or{' '}\n      <b>swarmplot</b> is a type of data visualization that displays individual\n      data points in a way that they <b>don't overlap</b>, resulting in a\n      \"swarming\" effect that resembles a <b>swarm of bees</b>.\n    </p>\n    <p>\n      This chart type helps in revealing the <b>distribution</b> of the data\n      along a numeric variable, highlighting the density and variation of the\n      data more effectively than traditional{' '}\n      <a href=\"https://python-graph-gallery.com/scatter-plot/\">scatter plots</a>{' '}\n      or <a href=\"https://python-graph-gallery.com/boxplot/\">box plots</a>.\n    </p>\n    <p>\n      This section provides many beeswarm chart examples made with Python, using{' '}\n      <Link href=\"/seaborn/\">seaborn</Link> or{' '}\n      <Link href=\"/matplotlib/\">matplotlib</Link>. Examples cover the most\n      common use-cases, but also show how far in term of customization it is\n      possible to go.\n    </p>\n  </>\n);\n\nconst quickCode = `# Libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nmy_variable = np.random.normal(loc=10, scale=5, size=100)\n\n# Plot\nsns.swarmplot(y=my_variable)\nplt.show() # Display the chart\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Beeswarm\"\n    seoDescription=\"A collection of beeswarm chart examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Beeswarm() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Beeswarm\"\n        description={chartDescription}\n        chartType={'beeswarm'}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <a href=\"https://python-graph-gallery.com/seaborn/\">Seaborn</a>{' '}\n              comes with a <code>swarmplot()</code> function that is made for\n              beeswarm charts.\n            </p>\n            <p>\n              It expects a <code>x</code> or a <code>y</code> argument that\n              provides a set of <b>numeric values</b>.\n            </p>\n            <p>\n              Many options exist. You can check the{' '}\n              <a href=\"https://seaborn.pydata.org/generated/seaborn.swarmplot.html\">\n                official documentation\n              </a>{' '}\n              or the examples below.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/505-Introduction-to-swarm-plot-in-seaborn'}>\n              <ChartImage\n                imgName=\"505-Introduction-to-swarm-plot-in-seaborn-1\"\n                caption=\"Most basic beeswarm plot built with Python and Seaborn\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Warning\">🤔 When to use a beeswarm chart?</h2>\n          <p>\n            The beeswarm chart is a very good alternative to the{' '}\n            <a href=\"https://python-graph-gallery.com/boxplot/\">boxplot</a> that{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">\n              hides the underlying dataset\n            </a>\n            .\n          </p>\n          <p>\n            However, do not try to use it with a <b>very big</b> dataset.\n            Indeed, avoiding circle overlap will be possible with a small amount\n            of data points, but it will get impossible otherwise. In this case,\n            take a look to the{' '}\n            <a href=\"https://python-graph-gallery.com/violin-plot/\">\n              violin chart\n            </a>{' '}\n            instead.\n          </p>\n          <p>\n            To read more about this, visit{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">\n              data-to-viz.com\n            </a>{' '}\n            that has a dedicated article.\n          </p>\n          <br />\n          <br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Beeswarm with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. The <code>swarmplot()</code> function should get you\n          started in minutes. The examples below aim at showcasing the various\n          possibilities this function offers.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"505-Introduction-to-swarm-plot-in-seaborn-1\"\n            caption=\"Most basic beeswarm plot built with Python and Seaborn\"\n            linkTo=\"/505-Introduction-to-swarm-plot-in-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"505-Introduction-to-swarm-plot-in-seaborn-2\"\n            caption=\"Make your beeswarm plot horizontal by swapping axes\"\n            linkTo=\"/505-Introduction-to-swarm-plot-in-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"505-Introduction-to-swarm-plot-in-seaborn-3\"\n            caption=\"Build a beeswarm plot for several groups in the dataset\"\n            linkTo=\"/505-Introduction-to-swarm-plot-in-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Beeswarm with <code>Matplotlib</code>\n        </h2>\n        <p>\n          Building a beeswarm plot with matplotlib requires more manual work\n          since <b>no built-in function exists for the job</b>.\n        </p>\n        <p>\n          The following blog-post explains how to build yours from scratch. The\n          function divides the data into <b>bins</b>, calculates the{' '}\n          <b>upper bounds</b> for each bin, and then arranges the data points in\n          each bin to create the <b>horizontal spread</b> in the plot, ensuring\n          they don't overlap.\n        </p>\n        <p>\n          Once the dot position is available, it is possible to render it using\n          <b>matplotlib</b>:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"509-introduction-to-swarm-plot-in-matplotlib-1\"\n            caption=\"Most basic beeswarm plot built with Matplotlib\"\n            linkTo=\"/509-introduction-to-swarm-plot-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"509-introduction-to-swarm-plot-in-matplotlib-2\"\n            caption=\"Beeswarm chart with multiple groups\"\n            linkTo=\"/509-introduction-to-swarm-plot-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"509-introduction-to-swarm-plot-in-matplotlib-3\"\n            caption=\"Beeswarm and boxplot combination\"\n            linkTo=\"/509-introduction-to-swarm-plot-in-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best beeswarm examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://www.python-graph-gallery.com\">\n            Python graph gallery\n          </a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-ggbetweenstats-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-ggbetweenstats-with-matplotlib-square'}\n                caption={\n                  'A combination of a violin plot and a boxplot. Allows the comparison of several groups with statistical test results on top.'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","content","property","Script","id","strategy","src","chartDescription","quickCode","Head","Beeswarm","Layout","isTocEnabled","TitleAndDescription","description","chartType","Container","Row","CodeChunk","Spacing","Seaborn","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}