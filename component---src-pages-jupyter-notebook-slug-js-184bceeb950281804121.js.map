{"version":3,"file":"component---src-pages-jupyter-notebook-slug-js-184bceeb950281804121.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/{jupyterNotebook.slug}.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script\n        id=\"adthrive\"\n        strategy=\"post-hydrate\"\n        src={getAdThriveScriptUrl()}\n      />\n    </>\n  );\n};\n\n// Tried the idle strategy for AdThrive script put reported as unperformant by Raptive.\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import '../styles/basic.css';\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport Contact from '../components/Contact';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst JupyterNotebook = ({ data }) => {\n  const {\n    title,\n    description,\n    family,\n    chartType,\n    slug,\n    seoDescription,\n    keywords,\n  } = data.jupyterNotebook.metadata;\n  return (\n    <Layout\n      title={title}\n      isTocEnabled\n      chartType={chartType}\n      seoDescription={seoDescription}\n      keywords={keywords}\n    >\n      <TitleAndDescription\n        title={title}\n        description={'<p>' + description + '</p>'}\n        chartType={chartType}\n      />\n\n      {/* Blog content */}\n      <Container>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: data.jupyterNotebook.html }}\n        />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <ChartFamilySection chartFamily={family} hasGreyBackground />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact pageSlug={slug} isNotebook />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n};\n\nJupyterNotebook.propTypes = {\n  data: PropTypes.object,\n};\n\nexport const query = graphql`\n  query NotebookQuery($slug: String!) {\n    jupyterNotebook(slug: { eq: $slug }) {\n      html\n      metadata {\n        title\n        description\n        seoDescription\n        family\n        chartType\n        keywords\n        slug\n      }\n    }\n  }\n`;\n\nexport const Head = ({ data }) => (\n  <SEO\n    title={data.jupyterNotebook.metadata.title}\n    seoDescription={data.jupyterNotebook.metadata.seoDescription}\n    keywords={data.jupyterNotebook.metadata.keywords}\n  />\n);\nexport default JupyterNotebook;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","name","content","property","Script","strategy","src","generalList","info","isGeneralFamily","includes","Link","to","SectionLogo","TitleAndDescription","description","chartInfo","Container","ChartTypeLink","dangerouslySetInnerHTML","__html","marginTop","Button","size","dataToVizURL","_ref2","chartDescription","url","width","marginLeft","Head","data","jupyterNotebook","metadata","slug","Layout","isTocEnabled","html","Spacing","hasGreyBackground","Contact","pageSlug","isNotebook","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}