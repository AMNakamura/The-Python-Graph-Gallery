{"version":3,"file":"component---src-pages-choropleth-map-js-f817b6e7b9eccdacc9fb.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/choropleth-map.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n    </>\n  );\n};\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport Button from 'react-bootstrap/Button';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/choropleth.html'>choropleth map</a> displays divided geographical areas or regions that are coloured in relation to a numeric variable. This section explains how to build static choropleth with <code>geopandas</code> and <code>geoplot</code>, and interactive versions with tools like <code>folium</code> and <code>plotly</code>.</p>\";\n\nexport const Head = () => (\n  <SEO\n    title=\"Choropleth map\"\n    seoDescription=\"A collection of choropleth map examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Choropleth() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Choropleth map\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Geopandas & Geoplot\">\n          Choropleth map with <code>Geopandas</code> and <code>GeoPlot</code>\n        </h2>\n        <p>\n          <code>Geoplot</code> is a python library for geospatial data\n          visualization. It works pretty well with <code>geopandas</code>,\n          another library made to deal with geospatial data objects.\n        </p>\n        <p>\n          <code>Geoplot</code> has a <code>choropleth()</code> function that\n          allows to build a choropleth map easily as shown in the example below.\n        </p>\n        <div style={{ margin: '0 auto', padding: 0 }}>\n          <Link to=\"/choropleth-map-geopandas-python\">\n            <ChartImage\n              imgName={'choropleth-map-geopandas-python'}\n              caption={\n                'Choropleth map of US counties with Python, Geopandas and Geoplot'\n              }\n            />\n          </Link>\n        </div>\n        <Link to=\"/choropleth-map-geopandas-python\">\n          <Button size=\"xl\">Read post</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Folium\">\n          <code>Folium</code> for google maps style choropleth maps\n        </h2>\n        <p>\n          <code>Folium</code> is a wrapper of the <code>Leaflet.js</code>{' '}\n          javascript library. It brings the power of javascript for data\n          visualization, but still allows to do some data wrangling with Python.\n          Building a choropleth with <code>Folium</code> is quite\n          straightforward thanks to the\n          <code>choropleth()</code> function.\n        </p>\n        <div className=\"mx-auto\">\n          <iframe\n            src=\"/interactiveCharts/292-choropleth-map-with-folium.html\"\n            title=\"Folium choropleth map\"\n            style={{ border: 'none', width: '800px', height: '430px' }}\n          ></iframe>\n        </div>\n        <Link to=\"/292-choropleth-map-with-folium\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotly\">\n          <code>Plotly</code> for interactive choropleth maps\n        </h2>\n        <p>\n          <code>Seaborn</code> is another great alternative to build an area\n          chart with <code>python</code>. The below examples show how to start\n          basic, apply usual customization, and use the small multiple technique\n          for when you have several groups to compare.\n        </p>\n        <div className=\"mx-auto\">\n          <iframe\n            src=\"/interactiveCharts/choropleth-map-plotly-python.html\"\n            title=\"parallel coordinate chart with plotly\"\n            style={{ border: 'none', width: '800px', height: '500px' }}\n          ></iframe>\n        </div>\n        <Link to=\"/choropleth-map-plotly-python\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"map\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","allGifs","ChartImage","imgName","includes","image","useStaticQuery","allFile","edges","find","n","node","name","GatsbyImage","childImageSharp","gatsbyImageData","alt","SEO","title","seoDescription","keywords","href","rel","content","property","generalList","info","isGeneralFamily","Link","to","SectionLogo","TitleAndDescription","description","chartInfo","Container","ChartTypeLink","dangerouslySetInnerHTML","__html","marginTop","Button","size","dataToVizURL","_ref2","chartDescription","url","width","marginLeft","Head","Choropleth","Layout","isTocEnabled","margin","padding","Spacing","src","border","height","Contact","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}