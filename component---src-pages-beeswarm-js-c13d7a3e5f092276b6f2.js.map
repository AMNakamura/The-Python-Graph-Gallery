{"version":3,"file":"component---src-pages-beeswarm-js-c13d7a3e5f092276b6f2.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ToggleButtonGroup.js","webpack://the-python-graph-gallery/./src/util/functionDescriptions.js","webpack://the-python-graph-gallery/./src/components/FunctionExploration.js","webpack://the-python-graph-gallery/./src/pages/beeswarm.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ToggleButton.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","import * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    children,\n    type = 'radio',\n    name,\n    value,\n    onChange,\n    vertical = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    value: 'onChange'\n  });\n  const getValues = () => value == null ? [] : [].concat(value);\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, {\n    ...controlledProps,\n    ref: ref,\n    vertical: vertical,\n    children: map(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n      const handler = e => handleToggle(childVal, e);\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  });\n});\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});","export const functionDescriptions = {\n    kdeplot: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"fill\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'control the color', type: 'boolean', relatedChart: '70_deffffed' }\n        ]\n    },\n    violin: {\n        description: '',\n        docUrl: 'https://seaborn.pydata.org/generated/seaborn.violinplot.html',\n        basicUsage: '',\n        parameters: [\n            { name: \"width\", description: 'color under the curve', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"bw\", description: 'control how density is computed', type: 'boolean', relatedChart: '70_deffffed' },\n            { name: \"color\", description: 'controls the color', type: 'string', relatedChart: '70_deffffed' }\n        ]\n    }\n}\n\n\n","import { Link } from \"gatsby\";\nimport React, { useState } from \"react\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { functionDescriptions } from \"../util/functionDescriptions\";\nimport \"./functionExploration.css\";\n\nconst capitalize = (s) => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default function FunctionExploration({ functionName }) {\n  // Get the right function\n  const functionInfo = functionDescriptions[functionName];\n\n  // Get the right parameter\n  const [selectedParameter, setSelectedParameter] = useState(\n    functionInfo.parameters[0].name\n  );\n  const [someString, setSomeString] = useState(\"hello\");\n  const selectedParameterInfo = functionInfo.parameters.filter(\n    (param) => param.name === selectedParameter\n  )[0];\n\n  return (\n    <>\n      <h2 id={capitalize(functionName + \"()\" + \" details\")}>\n        &#128270; <code>{functionName}</code> function parameters\n        <a\n          style={{ marginLeft: \"15px\", fontSize: \"14px\" }}\n          href={functionInfo.docUrl}\n        >\n          &rarr; see full doc\n        </a>\n      </h2>\n\n      <ToggleButtonGroup\n        type=\"radio\"\n        size=\"sm\"\n        name=\"functionParameter\"\n        value={selectedParameter}\n        onChange={(value) => setSelectedParameter(value)}\n      >\n        {functionInfo.parameters.map((item, i) => (\n          <ToggleButton\n            key={i}\n            // variant=\"secondary\"\n            className={\"functionButton\"}\n            id={`functionParameter-${item.name}`}\n            value={item.name}\n          >\n            {item.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n      <div>\n        <code>string</code>\n        <span>&rarr; {selectedParameterInfo.description}</span>\n      </div>\n      {/* <div style={{ paddingLeft: \"6px\", fontSize: \"14px\" }}><Link to={selectedParameterInfo.relatedChart}>check a chart using it</Link></div> */}\n      <br />\n      <br />\n    </>\n  );\n}\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport FunctionExploration from '../components/FunctionExploration';\nimport Spacing from '../components/Spacing';\n\nconst chartDescription = (\n  <>\n    <p>\n      A <a href=\"https://www.data-to-viz.com\">beeswarm plot</a> or{' '}\n      <b>swarmplot</b> is a type of data visualization that displays individual\n      data points in a way that they <b>don't overlap</b>, resulting in a\n      \"swarming\" effect that resembles a <b>swarm of bees</b>.\n    </p>\n    <p>\n      This chart type helps in revealing the <b>distribution</b> of the data\n      along a numeric variable, highlighting the density and variation of the\n      data more effectively than traditional{' '}\n      <a href=\"https://python-graph-gallery.com/scatter-plot/\">scatter plots</a>{' '}\n      or <a href=\"https://python-graph-gallery.com/boxplot/\">box plots</a>.\n    </p>\n    <p>\n      This section provides many beeswarm chart examples made with Python, using{' '}\n      <Link href=\"/seaborn/\">seaborn</Link> or{' '}\n      <Link href=\"/matplotlib/\">matplotlib</Link>. Examples cover the most\n      common use-cases, but also show how far in term of customiwzation it is\n      possible to go.\n    </p>\n  </>\n);\n\nconst quickCode = `# Libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nmy_variable = np.random.normal(loc=10, scale=5, size=100)\n\n# Plot\nsns.swarmplot(y=my_variable)\nplt.show() # Display the chart\n`;\n\nexport default function Beeswarm() {\n  return (\n    <Layout\n      title=\"Beeswarm\"\n      isTocEnabled\n      seoDescription=\"A collection of beeswarm chart examples made with Python, coming with explanation and reproducible code\"\n    >\n      <TitleAndDescription\n        title=\"Beeswarm\"\n        description={chartDescription}\n        chartType={'beeswarm'}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <a href=\"https://python-graph-gallery.com/seaborn/\">Seaborn</a>{' '}\n              comes with a <code>swarmplot()</code> function that is made for\n              beeswarm charts.\n            </p>\n            <p>\n              It expects a <code>x</code> or a <code>y</code> argument that\n              provides a set of <b>numeric values</b>.\n            </p>\n            <p>\n              Many options exist. You can check the{' '}\n              <a href=\"https://seaborn.pydata.org/generated/seaborn.swarmplot.html\">\n                official documentation\n              </a>{' '}\n              or the examples below.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/505-Introduction-to-swarm-plot-in-seaborn'}>\n              <ChartImage\n                imgName=\"505-Introduction-to-swarm-plot-in-seaborn-1\"\n                caption=\"Most basic beeswarm plot built with Python and Seaborn\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Warning\">🤔 When to use a beeswarm chart?</h2>\n          <p>\n            The beeswarm chart is a very good alternative to the{' '}\n            <a href=\"https://python-graph-gallery.com/boxplot/\">boxplot</a> that{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">\n              hides the underlying dataset\n            </a>\n            .\n          </p>\n          <p>\n            However, do not try to use it with a <b>very big</b> dataset.\n            Indeed, avoiding circle overlap will be possible with a small amount\n            of data points, but it will get impossible otherwise. In this case,\n            take a look to the{' '}\n            <a href=\"https://python-graph-gallery.com/violin-plot/\">\n              violin chart\n            </a>{' '}\n            instead.\n          </p>\n          <p>\n            To read more about this, visit{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">\n              data-to-viz.com\n            </a>{' '}\n            that has a dedicated article.\n          </p>\n          <br />\n          <br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Beeswarm with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. The <code>swarmplot()</code> function should get you\n          started in minutes. The examples below aim at showcasing the various\n          possibilities this function offers.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"505-Introduction-to-swarm-plot-in-seaborn-1\"\n            caption=\"Most basic beeswarm plot built with Python and Seaborn\"\n            linkTo=\"/505-Introduction-to-swarm-plot-in-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"505-Introduction-to-swarm-plot-in-seaborn-2\"\n            caption=\"Make your beeswarm plot horizontal by swapping axes\"\n            linkTo=\"/505-Introduction-to-swarm-plot-in-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"505-Introduction-to-swarm-plot-in-seaborn-3\"\n            caption=\"Build a beeswarm plot for several groups in the dataset\"\n            linkTo=\"/505-Introduction-to-swarm-plot-in-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"From the web\">\n          <Matplotlib />\n          From the web\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://www.python-graph-gallery.com\">\n            Python graph gallery\n          </a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-ggbetweenstats-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-ggbetweenstats-with-matplotlib-square'}\n                caption={\n                  'A combination of a violin plot and a boxplot. Allows the comparison of several groups with statistical test results on top.'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst noop = () => undefined;\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, {\n      ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","map","children","func","index","child","ButtonGroup","bsPrefix","size","vertical","role","as","Component","rest","ref","prefix","baseClass","displayName","ToggleButtonGroup","props","type","value","onChange","controlledProps","getValues","concat","values","childVal","childOnChange","checked","indexOf","e","inputVal","event","isActive","filter","handleToggle","Object","assign","Button","ToggleButton","functionDescriptions","kdeplot","description","docUrl","basicUsage","parameters","relatedChart","violin","capitalize","s","charAt","toUpperCase","slice","FunctionExploration","functionName","functionInfo","selectedParameter","setSelectedParameter","useState","someString","setSomeString","selectedParameterInfo","param","id","style","marginLeft","fontSize","href","item","i","key","chartDescription","quickCode","Beeswarm","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","chartType","Container","Row","CodeChunk","Spacing","Seaborn","Matplotlib","ChartFamilySection","chartFamily","Contact","noop","disabled","inputRef","autoComplete","undefined","htmlFor"],"sourceRoot":""}