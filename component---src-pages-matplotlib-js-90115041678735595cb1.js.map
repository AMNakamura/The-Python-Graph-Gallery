{"version":3,"file":"component---src-pages-matplotlib-js-90115041678735595cb1.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/matplotlib.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ToggleButton.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","\nimport React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport { Col, ToggleButton } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\n\nconst chartDescription =\n  \"<p><code>Matplotlib</code> is the most famous library for data visualization with <code>python</code>. It allows to create literally every type of chart with a great level of customization. This page provides some general tips that can be applied on any kind of chart made with <code>matplotlib</code> like customizing titles or colors. If you're looking at creating a specific chart type, visit <a href='https://www.python-graph-gallery.com'>the gallery</a> instead.</p>\";\n\nconst quickCode = `# library\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create data\nx=range(1,6)\ny=[1,4,6,8,4]\n\n# Area plot\nplt.fill_between(x, y)\nplt.show()\n`\n\nconst pyplotAPI = `# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Create horizontal bars\nplt.barh(y=df.Group, width=df.Value);\n\n# Add title\nplt.title('A simple barplot');\n`\n\nconst objOrientedAPI = `# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Initialize a Figure and an Axes\nfig, ax = plt.subplots()\n\n# Fig size\nfig.set_size_inches(9,9)\n\n# Create horizontal bars\nax.barh(y=df.Group, width=df.Value);\n\n# Add title\nax.set_title('A simple barplot');\n`\n\nconst allStyle = ['seaborn-darkgrid', 'seaborn-notebook', 'classic', 'seaborn-ticks', 'grayscale', 'bmh', 'seaborn-talk', 'dark_background', 'ggplot', 'fivethirtyeight', '_classic_test', 'seaborn-colorblind', 'seaborn-deep', 'seaborn-whitegrid', 'seaborn-bright', 'seaborn-poster', 'seaborn-muted', 'seaborn-paper', 'seaborn-white', 'seaborn-pastel', 'seaborn-dark', 'seaborn', 'seaborn-dark-palette']\n\n\nexport default function Matplotlibs() {\n\n  const [selectedParameter, setSelectedParameter] = React.useState(allStyle[0])\n\n  const allStyleButtons = allStyle.map(\n    (item, i) =>\n      <ToggleButton\n        type=\"radio\"\n        active={true}\n        key={i}\n        className={\"functionButton\"}\n        variant=\"secondary\"\n        size=\"sm\"\n        value={item}\n        checked={selectedParameter === item}\n        onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n      >\n        {item}\n      </ToggleButton>\n  )\n\n  return (\n\n    <Layout title=\"Matplotlib\" isTocEnabled seoDescription=\"A collection of charts, tips and tricks on the Matplotlib Python library.\">\n\n      <TitleAndDescription\n        title=\"Matplotlib\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Matplotlib</code> is the most famous python data visualization library. It is widely used and most of other viz libraries (like <code>seaborn</code>)\n            are actually built on top of it.</p>\n            <p>Once installed, matplotlib must be imported, usually using <code>import matplotlib.pyplot as plt</code>. You can then use use the functions available in the <code>plt</code> object.</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/240-basic-area-chart\"}>\n              <ChartImage imgName=\"240_basic_area_chart\"\n                caption=\"The most basic area chart one can make with python and matplotlib\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Lexicon\"><Matplotlib />Basic vocabulary</h2>\n        <p>\n          The figure below describes the anatomy of a <code>matplotlib</code> charts. It names all the main components,\n          names that you need to know to understand the documentation properly.\n        </p>\n        <p>\n          &#9888;&#65039; <u>Disclaimer</u>: this figure comes from the very complete <a href='https://matplotlib.org/faq/usage_faq.html#coding-styles'>matplotlib documentation</a>. Have a look at it\n          for a thorough explanation on how this library works.\n        </p>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <ChartImage imgName={'matplotlib_vocabulary'} caption={'Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly'} />\n        </div>\n        <a href='https://matplotlib.org/faq/usage_faq.html#coding-styles'>\n          <Button size=\"sm\">Matplotlib doc</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n\n      <Container>\n        <h2 id=\"APIs\"><Matplotlib />Two distinct APIs</h2>\n        <p>\n          There are 2 main ways to build a chart with matplotlib: the <code>pyplot API</code> and the <code>object-oriented API</code>.\n        </p>\n        <p>➡️ <code>pyplot API</code></p>\n        <p>Pyplot is a collection of functions, each function applying a change to a figure. For\n          instance, <code>plt.barh()</code> will build a barplot and <code>plt.title()</code> will\n          add a title to it.\n        </p>\n        <CodeChunk>{pyplotAPI}</CodeChunk>\n\n        <br /><br />\n        <p>➡️ <code>object oriented API</code></p>\n        <p>The object oriented API usually starts by initializing one <code>Figure</code> object and\n        one or more <code>Axes</code> object using the <code>subplot()</code> function. Then the methods of those objects\n        will be used to apply changes to the chart.</p>\n        <CodeChunk>{objOrientedAPI}</CodeChunk>\n\n        <br /><br />\n        <p>See how the syntax slightly differs between both options? (<code>plt.title</code> versus <code>ax.set_title()</code>. This\n        is pretty confusing and I advise to have a look to the <a href='https://matplotlib.org/stable/api/index.html#usage-patterns'>official documentation</a> for a\n        more thorough explanation. In the gallery, both APIs are used.</p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Title\"><Matplotlib />Customizing titles</h2>\n        <p>\n          The title is a key part of a good chart. It has to <u>summarize</u> its key message in a few words. Always avoid to simply\n          repeat what is displayed on each axis. Try to provide some more insight allowing to understand the main result instead.\n        </p>\n        <p>The <Link to='/190-custom-matplotlib-title'>post #190</Link> goes in depth on how to customize the <code>matplotlib</code>\n        title. All the main types of change are descried: changing\n        its color, adding a subtitle, using math formulas and so on. Give it a go!\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"190_Custom_title6\"\n            caption=\"Python chart with subtitle and custom color\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title7\"\n            caption=\"Add a math formula in title with Matplotlib\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title5\"\n            caption=\"Control the height of the matplotlib title\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Annotation\"><Matplotlib />Annotation</h2>\n        <p>\n          Annotation is a key part of a great visualization. It transforms a simple chart\n          in a whole piece of story telling. Before you share your graph with anyone,\n          make sure the key insight are highlighted with labels, shapes or color.\n        </p>\n        <p>\n          All those kind of annotation are built thanks to various matplotlib functions\n          like <code>annotate()</code> or <code>add_patch()</code>. The blogposts showcased below should get you started\n          with it.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"193_annotate1\"\n            caption=\"Add a label with a segment\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate2\"\n            caption=\"Add a square to highlight an area\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate3\"\n            caption=\"Add a circle to highlight an area\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate4\"\n            caption=\"Add a segment\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate5\"\n            caption=\"Add vertical and horizontal ablines\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate6\"\n            caption=\"Annotate with an equation\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n        <h2 id=\"Cheatsheets\">✨ Cheatsheets</h2>\n          <p>\n            It's pretty hard to remember all the matplotlib associated vocabulary. The <Link to=\"/cheat-sheets\">cheatsheet section</Link> is\n            here to help, with a few sheets that you'll probably want to use on a daily basis.\n          </p>\n          <Row>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage imgName={'matplotlib_cheat_sheet'} caption={'Matplotlib cheatsheet by Datacamp'} />\n              </Link>\n            </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage imgName={'matplotlib-python-official-cheatsheet1'} caption={'Official Matplotlib cheatsheet (page 1)'} />\n              </Link>\n            </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage imgName={'matplotlib-python-official-cheatsheet2'} caption={'Official Matplotlib cheatsheet (page 2)'} />\n              </Link>\n            </Col>\n          </Row>\n        <br/>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Font\"><Matplotlib />Custom fonts</h2>\n        <p>\n          Using custom fonts adds a nice touch to your graph and make it shine among all the other plots\n          using defaults. The blog-post below will guide you through the process: installing a font\n          and calling it with matplotlib functions.\n        </p>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <Link to='/custom-fonts-in-matplotlib'>\n            <ChartImage imgName={'custom-fonts-in-matplotlib'} caption={'How to use custom fonts with matplotlib'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Margin\"><Matplotlib />Add margin around a <code>matplotlib</code> chart</h2>\n        <p>\n          It is a common struggle to deal with the margins around the chart. Fortunately this\n          is pretty straightforward thanks to the <code>subplots_adjust()</code> function as explained in the examples\n          below.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"192_increase_margin2\"\n            caption=\"Increase the bottom margin of a matplotlib chart.\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"192_increase_margin4\"\n            caption=\"Increase the top margin to fit a title\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Subplot\"><Matplotlib />Split the figure in subplots</h2>\n        <p>\n          It can be really useful to split your graphic window in several\n          parts, in order to display several charts in the same time.\n          The <code>subplot()</code> function of <code>matplotlib</code> allows to\n          do it quickly with a great level of customization.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot4\"\n            caption=\"Split the figure in 4 charts of same size.\"\n            linkTo=\"/194-split-the-graphic-window-with-subplot\"\n          />\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot6\"\n            caption=\"Split the figure with a custom layout\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot9\"\n            caption=\"Manage chart size on subplots\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n        </Row>\n        <p>Additional note: how to remove some unused entries in a grid using the <code>ax.remove()</code> function:</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-remove-axis-in-matplotlib\"\n            caption=\"How to remove some unused entries in a chart grid.\"\n            linkTo=\"/how-to-remove-axis-in-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n\n      <Container>\n        <h2 id=\"Theme\"><Matplotlib />Available style sheets</h2>\n        <p>\n          <code>Matplotlib</code> comes with a set of 26 pre-built themes to style your chart easily. <Link to='/199-matplotlib-style-sheets'>This post</Link> is\n           dedicated to this feature, explaining how to use <code>plt.style.use()</code> to pick a theme up.\n        </p>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <Link to='/199-matplotlib-style-sheets'>\n            <ChartImage imgName={'199-matplotlib-style-sheets-538-full'} caption={'Customize a matplotlib chart with a preset theme'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Axis\"><Matplotlib />Customizing axis</h2>\n        <p>\n          <code>Matplotlib</code> allows every kind of axis configuration. It is mainly done thanks\n          to the <code>tick_params()</code>, <code>xticks()</code> and <code>xlabels()</code> functions.\n          The <Link to='/191-custom-axis-on-matplotlib-chart'>post #191</Link> will guide you through all the possibilities.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"191_Custom_axis1\"\n            caption=\"Change the axis title and its appearance\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis2\"\n            caption=\"Control axis labels and ticks look\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis6\"\n            caption=\"Control axis limit with the xlim() function\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-time-series-with-matplotlib\"\n            caption=\"How to deal with the date format. How to represent those dates properly on the X axis.\"\n            linkTo=\"/basic-time-series-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-and-log-scale-in-matplotlib\"\n            caption=\"How to use a log scale for the X or the Y axis.\"\n            linkTo=\"/scatterplot-and-log-scale-in-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Legend\"><Matplotlib />Customizing the legend</h2>\n        <p>\n          If you have several colors or marker on your chart, you can't escape the hassle\n          of building a nice legend. The blogpost linked below should help for all the most\n          common use cases like positioning the legend, adding and customizing a title to it,\n          controling markers and labels and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib1\"\n            caption=\"How to add the default matplotlib legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib2\"\n            caption=\"Legend location, learn how to add it anywhere including outside the plot area\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib3\"\n            caption=\"Customize the legend label appearance\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib4\"\n            caption=\"Add and customize the title of the legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib5\"\n            caption=\"Customize the marker of each element item\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib6\"\n            caption=\"Add a background, stroke and more legend customization\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-use-rectangles-in-matplotlib-legends\"\n            caption=\"How to customize the legend handle to have a different shape that the one used on the chart\"\n            linkTo=\"/how-to-use-rectangles-in-matplotlib-legends\"\n          />\n        </Row>\n      </Container>\n\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst noop = () => undefined;\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, {\n      ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","pyplotAPI","objOrientedAPI","allStyle","Matplotlibs","selectedParameter","setSelectedParameter","map","item","i","ToggleButton","type","active","key","variant","size","value","checked","onChange","e","currentTarget","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Matplotlib","href","style","maxWidth","margin","padding","Button","ChartFamilySection","chartFamily","Contact","noop","bsPrefix","disabled","inputRef","props","ref","children","autoComplete","undefined","role","as","htmlFor","displayName"],"sourceRoot":""}