{"version":3,"file":"component---src-pages-pandas-js-a4243836aa34c0babfef.js","mappings":"4MAOA,MAAMA,EAAU,CACd,iBACA,yBACA,wBAKa,SAASC,EAAUC,GAAwB,IAAvB,QAAEC,EAAO,QAAEC,GAASF,EACrD,GAAIF,EAAQK,SAASF,GACnB,OAAOG,EAAAA,cAAA,SAAG,QAGZ,MAgBMC,GAhBOC,EAAAA,EAAAA,gBAAe,cAgBTC,QAAQC,MAAMC,MAAMC,GAC9BA,EAAEC,KAAKC,KAAKT,SAASF,KAG9B,OAAKI,EAMHD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKS,UAAU,uBACbT,EAAAA,cAACU,EAAAA,EAAW,CACVT,MAAOA,EAAMM,KAAKI,gBAAgBC,gBAClCC,IAAKf,EACLW,UAAU,kBAEXX,GACCE,EAAAA,cAAA,OAAKS,UAAU,qBACbT,EAAAA,cAAA,OAAKS,UAAU,yBACbT,EAAAA,cAAA,SAAIF,OAfP,IAsBX,C,mGCzDe,SAASgB,EAAmBlB,GAAgC,IAA/B,QAAEC,EAAO,QAAEC,EAAO,OAAEiB,GAAQnB,EACtE,OACEI,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAIL,GACRf,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAASA,EAASC,QAASA,KAI/C,C,4KCCA,MAAMuB,EACJrB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAG,gLAQQ,SAASsB,IACtB,OACEtB,EAAAA,cAACuB,EAAAA,EAAM,CACLC,MAAM,SACNC,cAAY,EACZC,eAAe,kFAEf1B,EAAAA,cAAC2B,EAAAA,EAAmB,CAClBH,MAAM,gCACNI,YAAaP,EACbQ,UAAW,WAGb7B,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAAA,SAAG,mEAGLA,EAAAA,cAAC+B,EAAAA,EAAO,MAER/B,EAAAA,cAAC+B,EAAAA,EAAO,MACR/B,EAAAA,cAAA,OAAKS,UAAU,cAAcuB,GAAG,WAC9BhC,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAACiC,EAAAA,EAAkB,CAACC,YAAY,cAIpClC,EAAAA,cAAC+B,EAAAA,EAAO,MAER/B,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAACmC,EAAAA,EAAO,OAGVnC,EAAAA,cAAC+B,EAAAA,EAAO,MAGd,C","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/pandas.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Plotly } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport ChartImageContainer from '../components/ChartImageContainer';\n\nconst chartDescription = (\n  <>\n    <p>\n      Beyond its powerful data manipulation capabilities, Pandas offers\n      convenient plotting methods, enabling users to visualize data directly\n      from DataFrame and Series objects.\n    </p>\n  </>\n);\n\nexport default function Plotlys() {\n  return (\n    <Layout\n      title=\"Pandas\"\n      isTocEnabled\n      seoDescription=\"An overview of the Pandas python library data wrangling and data visualization\"\n    >\n      <TitleAndDescription\n        title=\"Pandas for data visualization\"\n        description={chartDescription}\n        chartType={'plotly'}\n      />\n\n      <Container>\n        <p>This section is under construction and will be available soon.</p>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n\nconst quickCode = `# Load plotly\nimport plotly.graph_objects as go\n\n# Sample data\nx = [1.5, 2.9, 3, 4.2, 5.6]\ny = [2.2, 13.3, 4.4, 55.3, 52.1]\n\n# Initialize a figure\nfig = go.Figure()\n\n# Add the scatter trace\nfig.add_trace(go.Scatter( \n    x=x, # Variable in the x-axis\n    y=y, # Variable in the y-axis\n    mode='markers', # This explicitly states that we want our observations to be represented by points\n))\n\n# Show\nfig.show()\n`;\n\nconst codeInstall = `pip install plotly`;\n\nconst saveCode = `fig.write_html(\"the/path/to/chart-name.html\")`;\nconst embedCode = `<iframe\n  src=\"the/path/to/chart-name.html\"\n  width=\"800\"\n  height=\"600\"\n  title=\"chart name\"\n  style=\"border:none\">\n</iframe>`;\n\nconst plotlyExpressCode = `# import the plotly express library\nimport plotly.express as px\n\n# Some dummy data\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [15, 22, 18, 12, 28]\n\n# Plot\nfig = px.bar(\n  x=categories, \n  y=values, \n)\n\nfig.show()\n`;\n\nconst plotlyGoCode = `# import the plotly graph objects lib\nimport plotly.graph_objects as go\n\n# Some dummy data\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [15, 22, 18, 12, 28]\n\n# Create a bar chart using the Graph Object API\nfig = go.Figure(data=[go.Bar(x=categories, y=values)])\n\n# Update layout\nfig.update_layout(\n  title=\"Simple Bar Chart\", \n  xaxis_title=\"Categories\", \n  yaxis_title=\"Values\")\n\n\nfig.show()\n`;\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","Plotlys","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","chartType","Container","Spacing","id","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}