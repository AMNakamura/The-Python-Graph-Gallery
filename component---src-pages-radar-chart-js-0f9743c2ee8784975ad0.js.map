{"version":3,"file":"component---src-pages-radar-chart-js-0f9743c2ee8784975ad0.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/radar-chart.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script id=\"adthrive\" strategy=\"idle\" src={getAdThriveScriptUrl()} />\n    </>\n  );\n};\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport ChartImage from '../components/ChartImage';\nimport SectionLogoWithOverlay from '../components/SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst logoToKeep = ['lollipop', 'parallel', 'barplot', 'stackedBar'];\nconst SpiderAlternativeLogos = () => {\n  const allLogos = chartTypesInfo\n    .filter((chart) => logoToKeep.includes(chart.id))\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n};\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/caveat/spider.html'>radar chart</a> (or <a href='https://www.data-to-viz.com/caveat/spider.html'>spider plot</a>, or <a href='https://www.data-to-viz.com/caveat/spider.html'>polar chart</a>) allows to visualize one or more series of values over multiple quantitative variables. Each variable has its own axis, all axes are joined in the center of the figure. This section shows how to build it with <code>Matplotlib</code>, but keep in mind they are some <a href='https://www.data-to-viz.com/caveat/spider.html'>caveats</a> associated with this chart type.</p>\";\n\nexport const Head = () => (\n  <SEO\n    title=\"Radar chart\"\n    seoDescription=\"A collection of radar chart examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Radar() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Radar Chart\" description={chartDescription} />\n\n      <div className=\"greySection\" id=\"warning\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; Radar charts are criticized</h2>\n          <p>\n            Spider plots are somewhat criticized. The <u>variable order</u> has\n            a huge impact on the chart appearance, <u>scales</u> can be skewed,{' '}\n            <u>overplotting</u> makes it hard to read and <u>over-evaluation</u>{' '}\n            of differences are the main arguments.\n          </p>\n          <p>\n            You should probably read{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/spider.html\">\n              this article\n            </a>{' '}\n            that explains the issues more in depth before building one, and\n            consider switching to one of the alternative below:\n          </p>\n          <SpiderAlternativeLogos />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib /> Radar chart with <code>Matplotlib</code>\n        </h2>\n        <p>\n          As far as I know there isn't any library offering a function to build\n          a spider plot quickly. Fortunately, <code>Matplotlib</code> allows a\n          very high level of customization. With a bit of trigonometry and the{' '}\n          <code>plot()</code> function you should get your desired viz.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"390_basic_Radarchart\"\n            caption=\"Most basic radar chart with python.\"\n            linkTo=\"/390-basic-radar-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"391_Several_indiv_Radarchart\"\n            caption=\"Radar chart with several displayed values\"\n            linkTo=\"/391-radar-chart-with-several-individuals\"\n          />\n        </Row>\n        <p>\n          Radar charts are often used in combination with faceting. It allows to\n          compare the features of several groups, what would be unreadable if\n          plotted on the same chart.\n        </p>\n        <Link to={'/392-use-faceting-for-radar-chart'}>\n          <ChartImage\n            imgName=\"393_Faceting_and_Radarchart\"\n            caption=\"A polar chart with small multiple to compare 4 groups\"\n          />\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python radar chart examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://www.python-graph-gallery.com\">\n            Python graph gallery\n          </a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-radar-chart-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-radar-chart-with-matplotlib-square'}\n                caption={\n                  'An appealing radar chart with several groups to compare some penguins populations .'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-circular-barplot-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-circular-barplot-with-matplotlib-square'}\n                caption={\n                  'A circular barchart with several features per group made with Python and Matplotlib.'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","allGifs","ChartImage","imgName","includes","image","useStaticQuery","allFile","edges","find","n","node","name","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Link","to","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","content","property","Script","strategy","src","generalList","info","isGeneralFamily","SectionLogo","TitleAndDescription","description","chartInfo","Container","ChartTypeLink","dangerouslySetInnerHTML","__html","marginTop","Button","size","dataToVizURL","_ref2","chartDescription","url","width","marginLeft","logoToKeep","SpiderAlternativeLogos","Head","Radar","Layout","isTocEnabled","Spacing","Matplotlib","Contact","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}