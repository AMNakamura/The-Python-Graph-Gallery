{"version":3,"file":"component---src-pages-scatter-plot-js-399f0928a4276ccb3dd5.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/scatter-plot.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/scatter.html'>scatter plot</a> displays the relationship between 2 numeric variables. Each data point is represented as a circle. Several tools allow to build one in python, this section provides code samples for <code>Seaborn</code>, <code>Matplotlib</code> and <code>Plotly</code> for interactive versions.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# use the function regplot to make a scatterplot\nsns.regplot(x=df[\"sepal_length\"], y=df[\"sepal_width\"])\n`;\n\nconst quickCodeMatplotlib = `# libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n# Create a dataset:\ndf=pd.DataFrame({'x_values': range(1,101), 'y_values': np.random.randn(100)*15+range(1,101) })\n\n# plot\nplt.plot( 'x_values', 'y_values', data=df, linestyle='none', marker='o')\nplt.show()\n`;\n\nexport default function ViolinPlot() {\n  return (\n    <Layout\n      title=\"Scatterplot\"\n      isTocEnabled\n      seoDescription=\"A collection of scatterplot examples made with Python, coming with explanation and reproducible code\"\n    >\n      <TitleAndDescription title=\"Scatterplot\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start (Seaborn)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              The <code>regplot()</code> function of the <code>Seaborn</code>{' '}\n              library is definitely the best way to build a scatterplot in\n              minutes. 🔥\n            </p>\n            <p>\n              Simply pass a numeric column of a data frame to both the{' '}\n              <code>x</code> and <code>y</code> variable and the function will\n              handle the rest.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/40-basic-scatterplot-seaborn'}>\n              <ChartImage\n                imgName=\"40_Basic_Scatterplot_seaborn\"\n                caption=\"Basic boxplot with Python and Seaborn from various data input formats.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Common caveats\">\n            &#9888;&#65039; Scatterplot and overplotting\n          </h2>\n          <p>\n            The main danger with scatterplots is{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/overplotting.html\">\n              overplotting\n            </a>\n            . When the sample size gets big, circles tend to overlap, making the\n            figure unreadable.\n          </p>\n          <p>\n            Several workarounds exist to fix the issue, like using opacity or\n            switching to another chart type:\n          </p>\n          <Row>\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting1\"\n              caption=\"Basic boxplot. You can quickly read the median, quartiles and outliers of each group.\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting2\"\n              caption=\"If you add individual points with jitter, a bimodal distribution appears for group B\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting10\"\n              caption=\"If you have a very large dataset, the violin plot is a better alternative than jittering\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n          </Row>\n          <Link to=\"/134-how-to-avoid-overplotting-with-python\">\n            <Button size=\"sm\">Code and more</Button>\n          </Link>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Scatterplots with <code>Seaborn</code>\n        </h2>\n        <p>\n          <Link to=\"/seaborn\">Seaborn</Link> is a python library allowing to\n          make better charts easily. The <code>regplot()</code> function should\n          get you started in minutes. The{' '}\n          <Link to=\"/40-basic-scatterplot-seaborn\">first example</Link> below\n          explains how to build the most basic scatterplot with python. Then,\n          several types of customization are described: adding a{' '}\n          <Link to=\"/42-custom-linear-regression-fit-seaborn\">regression</Link>{' '}\n          line, tweaking <Link to=\"/41-control-marker-features\">markers</Link>\n          and <Link to=\"/44-control-axis-limits-of-plot-seaborn\">axis</Link>,\n          adding <Link to=\"/46-add-text-annotation-on-scatterplot\">labels</Link>{' '}\n          and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"40_Basic_Scatterplot_seaborn\"\n            caption=\"Most basic scatterplot with seaborn\"\n            linkTo=\"/40-basic-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"42_Scatterplot_custom_linear_fit_seaborn\"\n            caption=\"Add a regression thanks to the fit_reg parameter\"\n            linkTo=\"/42-custom-linear-regression-fit-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"41_Scatterplot_change_marker_shape_seaborn\"\n            caption=\"Customize markers: color, size, opacity, type and more\"\n            linkTo=\"/41-control-marker-features\"\n          />\n          <ChartImageContainer\n            imgName=\"43_seaborn_map_color_to_a_avariable3\"\n            caption=\"Color dots according to a group\"\n            linkTo=\"/43-use-categorical-variable-to-color-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"44_seaborn_control_axis_limits\"\n            caption=\"Control X and Y axes limits\"\n            linkTo=\"/44-control-axis-limits-of-plot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"45_set_color_of_each_point_in_scatterplot_seaborn\"\n            caption=\"Control the marker's color according to their coordinates\"\n            linkTo=\"/45-control-color-of-each-marker-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"46_add_text_annotation_scatterplot_seaborn3\"\n            caption=\"Add labels manually on your scatterplot\"\n            linkTo=\"/46-add-text-annotation-on-scatterplot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Related to Seaborn \">\n          &#128161; Other charts involving scatterplots and <code>Seaborn</code>\n        </h2>\n        <p>\n          If you are interested in scatterplots, some other chart could be\n          useful to you.\n        </p>\n        <p>\n          A scatterplot with{' '}\n          <Link to=\"/82-marginal-plot-with-seaborn\">marginal distribution</Link>{' '}\n          allows to check the distribution of both the <code>x</code> and{' '}\n          <code>y</code> variables. A{' '}\n          <Link to=\"/111-custom-correlogram\">correlogram</Link> allows to check\n          the relationship between each pair of numeric variables in a dataset.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot4\"\n            caption=\"Scatterplot with marginal distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"111_Correlogram_custom4\"\n            caption=\"Build a correlogram with the pairplot function\"\n            linkTo=\"/111-custom-correlogram\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start (Matplotlib)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <Link to=\"/matplotlib\">Matplotlib</Link> also requires only a few\n              lines of code to draw a scatterplot thanks to its{' '}\n              <code>plot()</code> function. The resulting chart is not as\n              good-looking, but the function probably offers more flexibility in\n              term of customization.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/130-basic-matplotlib-scatterplot'}>\n              <ChartImage\n                imgName=\"130_Basic_Matplotlib_Scatterplot\"\n                caption=\"Most basic scatterplot with Matplotlib.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCodeMatplotlib}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Scatterplots with <code>Matplotlib</code>\n        </h2>\n        <p>\n          <code>Matplotlib</code> is another great alternative to build\n          scatterplots with python. As often, it takes a bit more lines of code\n          to get a decent chart, but allows more customization.\n        </p>\n        <p>\n          The examples below should get you covered for all the most common\n          problems: adding{' '}\n          <Link to=\"/193-annotate-matplotlib-chart\">markers</Link>, adding\n          <Link to=\"/193-annotate-matplotlib-chart\">labels</Link>, changing{' '}\n          <Link to=\"/131-custom-a-matplotlib-scatterplot\">shapes</Link> and\n          more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"130_Basic_Matplotlib_Scatterplot\"\n            caption=\"Most basic scatterplot with Matplotlib\"\n            linkTo=\"/130-basic-matplotlib-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"131_Custom_Matplotlib_Scatterplot5\"\n            caption=\"Customize marker features: size, color, stroke, type and more\"\n            linkTo=\"/131-custom-a-matplotlib-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate6\"\n            caption=\"Display a math equation on your matplotlib chart\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate5\"\n            caption=\"Matplotlib: add horizontal and vertical ablines\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate2\"\n            caption=\"Highlight a specific area of the chart with Matplotlib\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate1\"\n            caption=\"Add an annotation to highlight a specific marker\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"manhattan-plot-with-matplotlib\"\n            caption=\"How to build a Manhattan plot with Python and Matplotlib\"\n            linkTo=\"/manhattan-plot-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib2\"\n            caption=\"Scatterplot with grouping and legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib6\"\n            caption=\"Legend customization: how to control location, add a background, customize labels and markers and more\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-and-log-scale-in-matplotlib\"\n            caption=\"How to use a log scale for the X or the Y axis.\"\n            linkTo=\"/scatterplot-and-log-scale-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-with-regression-fit-in-matplotlib\"\n            caption=\"How to compute and add a linear regression to a scatterplot with Python and matplotlib\"\n            linkTo=\"/scatterplot-with-regression-fit-in-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"From the web\">\n          <Matplotlib />\n          From the web\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://www.python-graph-gallery.com\">\n            Python graph gallery\n          </a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works.\n        </p>\n        <p>\n          The <Link to=\"/web-text-repel-with-matplotlib\">first example</Link>{' '}\n          below demos how to add clean labels on a scatterplot, automatically\n          avoiding overlapping. It also explains how to control background,\n          fonts, titles and more.\n        </p>\n        <p>\n          If you want to display your work here, please drop me a word or even\n          better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to={'/web-text-repel-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-text-repel-with-matplotlib-square'}\n                caption={\n                  'Learn how to use the adjustText library to add many labels with no overlaps.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link\n              to={'/web-scatterplot-text-annotation-and-regression-matplotlib'}\n            >\n              <ChartImage\n                imgName={\n                  'web-scatterplot-text-annotation-and-regression-matplotlib-square'\n                }\n                caption={\n                  'Scatterplot with regression fit, group colors and non-overlapping labels.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={'/web-scatterplot-astronaut'}>\n              <ChartImage\n                imgName={'web-scatterplot-astronaut-square'}\n                caption={\n                  'Dark mode scatterplot with custom annotations, title and explanations. All of that with a very good appearance!'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"correlation\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","quickCodeMatplotlib","ViolinPlot","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","href","Button","size","Seaborn","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}