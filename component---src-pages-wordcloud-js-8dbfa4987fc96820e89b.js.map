{"version":3,"file":"component---src-pages-wordcloud-js-8dbfa4987fc96820e89b.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/wordcloud.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                src\n                srcWebp\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <Img\n          alt={caption}\n          fluid={image.node.childImageSharp.fluid}\n          className=\"chartImageImg\"\n        />\n        <div className=\"chartImageOverlay\">\n          <div className=\"chartImageOverlayText\">\n            <p>{caption}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Col } from \"react-bootstrap\";\nimport ChartImage from \"../components/ChartImage\";\nimport SectionLogoWithOverlay from \"../components/SectionLogoWithOverlay\";\nimport { chartTypesInfo } from \"../util/sectionDescriptions\"\nimport { fullUrlToInternalLink } from \"../util/utils\";\nimport CodeChunk from \"../components/CodeChunk\";\nimport Spacing from \"../components/Spacing\";\n\nconst logoToKeep = ['lollipop', 'barplot', 'treemap', 'circularPacking']\nconst WordAlternativeLogos = () => {\n  const allLogos = chartTypesInfo\n    .filter((chart) => logoToKeep.includes(chart.id))\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2}>\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n\nconst quickCode = `# Libraries\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\n# Create a list of word\ntext=(\"Python Python Python Matplotlib\")\n\n# Create the wordcloud object\nwordcloud = WordCloud(width=480, height=480, margin=0).generate(text)\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.margins(x=0, y=0)\nplt.show()\n`\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/wordcloud.html'>word cloud</a> (also called <a href='https://www.data-to-viz.com/graph/wordcloud.html'>tag cloud</a> or <a href='https://www.data-to-viz.com/graph/wordcloud.html'>weighted list</a>) is a visual representation of text data. Words are usually single words, and the importance of each is shown with font size or color. <code>Python</code> fortunately has a <code>wordcloud</code> library allowing to build them.</p>\";\n\nexport default function Wordcloud() {\n\n  return (\n\n    <Layout title=\"Wordcloud\" isTocEnabled seoDescription=\"A collection of wordcloud examples made with Python, coming with explanation and reproducible code\">\n      <TitleAndDescription\n        title=\"Wordcloud\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>The <code>wordcloud</code> library is here to help you build a wordcloud in minutes. Here is a basic code snippets using the <code>WordCloud()</code> function to get you started.ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/260-basic-wordcloud\"}>\n              <ChartImage imgName=\"260_Basic_Wordcloud\"\n                caption=\"Most basic wordcloud with python and the wordcloud library.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"warning\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; The issue with wordclouds</h2>\n          <p>Wordclouds are aesthetically pleasing and people are used to it, what make sure\n          readers will understand them quick.\n          </p>\n          <p>However, it is important to consider the caveats associated to them. For instance,\n          <u>longer words</u> will t<u>ake more space</u> on the figure by construction which distorts\n          reality. Moreover, it is impossible to <u>translate a font size</u> to an accurate value.\n          </p>\n          <WordAlternativeLogos />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Wordcloud\">Wordclouds with.. the <code>wordcloud</code> library &#128512;</h2>\n        <p>\n          The <code>wordcloud</code> library takes as input a <code>string</code> containing all the words you want to display. It passes it to the <code>Wordcloud()</code> function that will compute the display an show it on the screen thanks to the <code>imshow()</code> function.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"261_Custom_Wordcloud1\"\n            caption=\"Wordcloud customization: word size.\"\n            linkTo=\"/261-custom-python-wordcloud\"\n          />\n          <ChartImageContainer\n            imgName=\"261_Custom_Wordcloud4\"\n            caption=\"Wordcloud customization: background color.\"\n            linkTo=\"/261-custom-python-wordcloud\"\n          />\n          <ChartImageContainer\n            imgName=\"261_Custom_Wordcloud5\"\n            caption=\"Wordcloud customization: word color.\"\n            linkTo=\"/261-custom-python-wordcloud\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Custom shapes\">Wordclouds and custom shapes</h2>\n        <p>\n          It is a common need to apply a specific shape to the wordcloud.\n          TODO. Make a bette image.\n          TODO: more proiminent link toward https://github.com/amueller/word_cloud\n        </p>\n        <div style={{ maxWidth: '750px', margin: \"auto\" }}>\n          <Link to={\"/262-worcloud-with-specific-shape\"}>\n            <ChartImage imgName=\"262_Wordcloud_with_a_Mask\"\n              caption=\"Use a mask to get a wordcloud with specific shape.\"\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["allGifs","ChartImage","imgName","caption","includes","image","useStaticQuery","allFile","edges","find","n","node","name","className","alt","fluid","childImageSharp","ChartImageContainer","linkTo","xs","md","Link","to","logoToKeep","WordAlternativeLogos","allLogos","chartTypesInfo","chart","id","map","link","fullUrlToInternalLink","pythonURL","key","chartType","logo","label","Wordcloud","title","isTocEnabled","seoDescription","description","style","maxWidth","margin","chartFamily"],"sourceRoot":""}