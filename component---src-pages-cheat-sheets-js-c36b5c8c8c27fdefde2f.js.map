{"version":3,"file":"component---src-pages-cheat-sheets-js-c36b5c8c8c27fdefde2f.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/cheat-sheets.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .filter((chart) => chart.id !== 'waffle') // Hide WAFFLE for now\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"g-3\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport Spacing from '../components/Spacing';\nimport ChartImage from '../components/ChartImage';\nimport { Matplotlib, Pandas, Seaborn } from '../components/MiscellaneousLogos';\nimport { Link } from 'gatsby';\nimport { Col, Row } from 'react-bootstrap';\n\nconst chartDescription =\n  \"<p>This section provides a few cheat sheets related with <code>python</code>, data wrangling and data visualization. Even with a perfect understanding of <code>python</code> and its libraries, it's almost impossible to remember the syntax of each function of the ecosystem. That's where cheatsheets are useful 🔥!</p>\";\n\nexport default function CheatSheet() {\n  return (\n    <Layout\n      title=\"Cheat sheets\"\n      isTocEnabled\n      seoDescription=\"A collection of cheat sheets related with Python and data visualization\"\n    >\n      <TitleAndDescription\n        title=\"Cheat Sheets\"\n        description={chartDescription}\n      />\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Matplotlib cheatsheet\n        </h2>\n        <p>\n          <a\n            href=\"https://datacamp.pxf.io/YgNDbR\"\n            title=\"Datacamp\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Datacamp\n          </a>{' '}\n          provides a cheatsheet describing the basics of <code>matplotlib</code>\n          . Matplotlib is the most widely used library for datavisualization\n          with python. You can read more about it on its{' '}\n          <Link href=\"/matplotlib\">dedicated page</Link>.\n        </p>\n        <Row>\n          <Col xs={12} md={12}>\n            <a href=\"https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Matplotlib_Cheat_Sheet.pdf\">\n              <ChartImage\n                imgName={'matplotlib_cheat_sheet'}\n                caption={'Matplotlib cheatsheet by Datacamp.'}\n              />\n            </a>\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <p>\n          The following 2 cheatsheets from the{' '}\n          <a href=\"https://github.com/matplotlib/cheatsheets\">\n            official matplotlib repository\n          </a>{' '}\n          are also very handy:\n        </p>\n        <Row>\n          <Col xs={12} md={12}>\n            <ChartImage\n              imgName={'matplotlib-python-official-cheatsheet1'}\n              caption={'Matplotlib cheatsheet by matplotlib (page 1).'}\n            />\n          </Col>\n          <Col xs={12} md={12}>\n            <ChartImage\n              imgName={'matplotlib-python-official-cheatsheet2'}\n              caption={'Matplotlib cheatsheet by matplotlib (page 2).'}\n            />\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Seaborn cheatsheet\n        </h2>\n        <p>\n          <a\n            href=\"https://datacamp.pxf.io/YgNDbR\"\n            title=\"Datacamp\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Datacamp\n          </a>{' '}\n          provides a cheatsheet describing the basics of <code>seaborn</code>.\n          Seaborn is also a widely used library for datavisualization with\n          python. It allows to get very clean chart with less code. You can read\n          more about it on its <Link href=\"/seaborn\">dedicated page</Link>.\n        </p>\n        <Row>\n          <Col xs={12} md={12}>\n            <a href=\"https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Seaborn_Cheat_Sheet.pdf\">\n              <ChartImage\n                imgName={'seaborn_cheat_sheet'}\n                caption={'Seaborn cheatsheet by Datacamp.'}\n              />\n            </a>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Pandas\">\n          <Pandas />\n          Pandas cheatsheet\n        </h2>\n        <p>\n          <a\n            href=\"https://datacamp.pxf.io/YgNDbR\"\n            title=\"Datacamp\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Datacamp\n          </a>{' '}\n          provides a cheatsheet describing the basics of <code>pandas</code>.\n          Pandas is mainly used for data manipulation with Python, but also\n          offers some dataviz helpers.\n        </p>\n        <Row>\n          <Col xs={12} md={12}>\n            <ChartImage\n              imgName={'pandas_cheat_sheet'}\n              caption={'Pandas cheatsheet by Datacamp.'}\n            />\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","allGifs","ChartImage","imgName","includes","image","useStaticQuery","allFile","edges","find","n","node","name","GatsbyImage","childImageSharp","gatsbyImageData","alt","generalList","info","isGeneralFamily","Link","to","SectionLogo","TitleAndDescription","title","description","chartInfo","Container","ChartTypeLink","dangerouslySetInnerHTML","__html","marginTop","Button","size","href","dataToVizURL","_ref2","chartDescription","url","width","marginLeft","CheatSheet","Layout","isTocEnabled","seoDescription","Spacing","Matplotlib","target","rel","Seaborn","Pandas","Contact","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}