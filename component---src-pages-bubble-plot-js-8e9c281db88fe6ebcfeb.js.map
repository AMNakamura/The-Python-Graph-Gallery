{"version":3,"file":"component---src-pages-bubble-plot-js-8e9c281db88fe6ebcfeb.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/bubble-plot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script id=\"adthrive\" strategy=\"idle\" src={getAdThriveScriptUrl()} />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/bubble.html'>bubble plot</a> is a <a href='https://www.python-graph-gallery.com/scatter-plot'>scatterplot</a> where the circle size is mapped to the value of a third numeric variable. This section shows many bubble plots made with <code>Python</code>, using both the <code>Matplotlib</code> and <code>Seaborn</code> libraries.</p>\";\n\nconst quickCode = `# libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom gapminder import gapminder # data set\n\n# data\ndata = gapminder.loc[gapminder.year == 2007]\n\n# use the scatterplot function to build the bubble map\nsns.scatterplot(data=data, x=\"gdpPercap\", y=\"lifeExp\", size=\"pop\", legend=False, sizes=(20, 2000))\n\n# show the graph\nplt.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Bubble plot\"\n    seoDescription=\"A collection of bubble chart examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function BubblePlot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Bubble plot\" description={chartDescription} />\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              The <code>scatterplot()</code> function of <code>seaborn</code>{' '}\n              also allows to build bubble charts. Indeed, it has a{' '}\n              <code>size</code> parameter that controls circle size according to\n              a numeric variable of the dataset.🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/bubble-plot-with-seaborn'}>\n              <ChartImage\n                imgName=\"bubble-plot-with-seaborn\"\n                caption=\"Basic bubble chart with Python and Seaborn.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Bubble plot with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is the best tool to quickly build a quality\n          bubble chart. The example below are based on the famous{' '}\n          <code>gapminder</code> dataset that shows the relationship between gdp\n          per capita, life expectancy and population of world countries.\n        </p>\n        <p>\n          The examples below start simple by calling the{' '}\n          <code>scatterplot()</code> function with the minimum set of\n          parameters. It then show how to change bubble colors to represent a\n          fourth variable, improve general styling, tweak the legend and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"bubble-plot-with-seaborn\"\n            caption=\"Basic bubble chart with Python and Seaborn.\"\n            linkTo=\"/bubble-plot-with-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Bubble plot with <code>Matplotlib</code>\n        </h2>\n        <p>\n          As for <Link to=\"/scatter-plot\">scatterplots</Link>,{' '}\n          <code>Matplotlib</code> will help us build a bubble plot thanks to the\n          the <code>plt.scatter()</code> function. This function provides a{' '}\n          <code>s</code> parameter allowing to pass a third variable that will\n          be mapped to the markers size.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"270_Basic_Bubble_plot\"\n            caption=\"Most basic bubble plot with Python and Matplotlib\"\n            linkTo=\"/270-basic-bubble-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"271_Bubble_plot_customization1\"\n            caption=\"Bubble plot customization: color\"\n            linkTo=\"/271-custom-your-bubble-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"271_Bubble_plot_customization2\"\n            caption=\"Bubble plot customization: shape\"\n            linkTo=\"/271-custom-your-bubble-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"271_Bubble_plot_customization3\"\n            caption=\"Bubble plot customization: size\"\n            linkTo=\"/271-custom-your-bubble-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"271_Bubble_plot_customization4\"\n            caption=\"Bubble plot customization: stroke\"\n            linkTo=\"/271-custom-your-bubble-plot\"\n          />\n        </Row>\n        <p>\n          Note that it is a common practice to map a fourth variable to the\n          markers colors thanks to the <code>c</code> parameter. This way,\n          you're now looking a 4 variables in the same time, on the same chart\n          🎉.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"272_Bubble_plot_with_mapped_color\"\n            caption=\"A bubble chart width 4 dimensions: x, y, size & color\"\n            linkTo=\"/272-map-a-color-to-bubble-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"bubble-plot-gapminder\"\n            caption=\"Bubble plot of the gapminder dataset\"\n            linkTo=\"/341-python-gapminder-animation\"\n          />\n        </Row>\n        <p>\n          A very common task when it comes to bubble chart is to add a proper\n          legend to explain what colors and sizes mean. The blogpost below is a\n          deep-dive into matplotlib legend and should be of great help for this\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib6\"\n            caption=\"Legend customization: how to control location, add a background, customize labels and markers and more\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python bubble chart examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://www.python-graph-gallery.com\">\n            Python graph gallery\n          </a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to={'/web-text-repel-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-text-repel-with-matplotlib-square'}\n                caption={\n                  'Learn how to use the adjustText library to add many labels with no overlaps.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link\n              to={'/web-scatterplot-text-annotation-and-regression-matplotlib'}\n            >\n              <ChartImage\n                imgName={\n                  'web-scatterplot-text-annotation-and-regression-matplotlib-square'\n                }\n                caption={\n                  'Scatterplot with regression fit, group colors and non-overlapping labels.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={'/web-scatterplot-astronaut'}>\n              <ChartImage\n                imgName={'web-scatterplot-astronaut-square'}\n                caption={\n                  'Dark mode scatterplot with custom annotations, title and explanations. All of that with a very good appearance!'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"correlation\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","content","property","Script","id","strategy","src","chartDescription","quickCode","Head","BubblePlot","Layout","isTocEnabled","TitleAndDescription","description","Spacing","Container","Row","CodeChunk","Seaborn","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}