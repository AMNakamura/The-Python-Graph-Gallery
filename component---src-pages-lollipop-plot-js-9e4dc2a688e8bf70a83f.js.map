{"version":3,"file":"component---src-pages-lollipop-plot-js-9e4dc2a688e8bf70a83f.js","mappings":"4MAMA,MAAMA,EAAU,CAAC,iBAAkB,yBAA0B,wBAI9C,SAASC,EAAUC,GAAwB,IAAvB,QAAEC,EAAO,QAAEC,GAASF,EAErD,GAAIF,EAAQK,SAASF,GACnB,OACEG,EAAAA,cAAA,SAAG,QAGP,MAcMC,GAdOC,EAAAA,EAAAA,gBAAe,cAcTC,QAAQC,MAAMC,MAAMC,GAC9BA,EAAEC,KAAKC,KAAKT,SAASF,KAG9B,OAAKI,EAKED,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAAA,OAAKS,UAAU,uBACbT,EAAAA,cAACU,EAAAA,EAAW,CACVT,MAAOA,EAAMM,KAAKI,gBAAgBC,gBAClCC,IAAKf,EACLW,UAAU,kBACZT,EAAAA,cAAA,OAAKS,UAAU,qBACbT,EAAAA,cAAA,OAAKS,UAAU,yBACbT,EAAAA,cAAA,SAAIF,OAZH,IAiBX,C,mGC/Ce,SAASgB,EAAmBlB,GAAgC,IAA/B,QAAEC,EAAO,QAAEC,EAAO,OAAEiB,GAAQnB,EACtE,OACEI,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAIL,GACRf,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAASA,EAASC,QAASA,KAI/C,C,iNCEA,MAAMuB,EACJ,scAGIC,EAAS,kWAcA,SAASC,IAEtB,OAEEvB,EAAAA,cAACwB,EAAAA,EAAM,CAACC,MAAM,iBAAiBC,cAAY,EAACC,eAAe,0GAEzD3B,EAAAA,cAAC4B,EAAAA,EAAmB,CAClBH,MAAM,gBACNI,YAAaR,IAGfrB,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAAA,MAAI+B,GAAG,SAAQ,iBACf/B,EAAAA,cAACgC,EAAAA,EAAG,CAACvB,UAAU,sBACbT,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAAA,SAAG,KAAEA,EAAAA,cAAA,YAAM,iBAAoB,kEAE/BA,EAAAA,cAAA,SAAG,wBAAqBA,EAAAA,cAAA,YAAM,UAAa,QAAKA,EAAAA,cAAA,YAAM,cAAiB,kBACnEA,EAAAA,cAAA,YAAM,UAAa,oDAGzBA,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,4BACRpB,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAAQ,0BAClBC,QAAQ,0DAIhBE,EAAAA,cAACiC,EAAAA,EAAS,KAAEX,IAGdtB,EAAAA,cAACkC,EAAAA,EAAO,MAERlC,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAAA,MAAI+B,GAAG,cAAa/B,EAAAA,cAACmC,EAAAA,GAAU,MAAG,sBAAmBnC,EAAAA,cAAA,YAAM,eAC3DA,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,cAAiB,4KAEKA,EAAAA,cAAA,YAAM,UAAa,cAEjDA,EAAAA,cAACgC,EAAAA,EAAG,KACFhC,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,yBACRC,QAAQ,0EACRiB,OAAO,6BAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,yBACRC,QAAQ,4DACRiB,OAAO,8BAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,yBACRC,QAAQ,qCACRiB,OAAO,8BAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,4BACRC,QAAQ,oDACRiB,OAAO,gCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,wCACRC,QAAQ,gDACRiB,OAAO,uCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,+EACRiB,OAAO,qCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0CACRC,QAAQ,0CACRiB,OAAO,gDAMbf,EAAAA,cAACkC,EAAAA,EAAO,MAERlC,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAAA,MAAI+B,GAAG,gBAAe/B,EAAAA,cAACmC,EAAAA,GAAU,MAAG,gBACpCnC,EAAAA,cAAA,SAAG,gFACKA,EAAAA,cAAA,KAAGoC,KAAK,mCAAkC,KAAK,UACjDpC,EAAAA,cAAA,KAAGoC,KAAK,wCAAuC,wBAAwB,qMAGrDpC,EAAAA,cAAA,KAAGoC,KAAK,sDAAqD,gBAAgB,KAErGpC,EAAAA,cAACgC,EAAAA,EAAG,KACFhC,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,8DACRpB,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAAS,mEAAoEC,QAAS,+IAGtGE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,6CACRpB,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAAS,kDAAmDC,QAAS,kGAGrFE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,+CACRpB,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAAS,oDAAqDC,QAAS,mGAM3FE,EAAAA,cAACkC,EAAAA,EAAO,MAERlC,EAAAA,cAAA,OAAKS,UAAU,cAAcsB,GAAG,WAC9B/B,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAACqC,EAAAA,EAAkB,CAACC,YAAY,cAIpCtC,EAAAA,cAACkC,EAAAA,EAAO,MAERlC,EAAAA,cAAC8B,EAAAA,EAAS,KACR9B,EAAAA,cAACuC,EAAAA,EAAO,OAGVvC,EAAAA,cAACkC,EAAAA,EAAO,MAId,C","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/lollipop-plot.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib } from \"../components/MiscellaneousLogos\"\nimport ChartImage from \"../components/ChartImage\";\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\";\nimport Spacing from \"../components/Spacing\";\n\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/lollipop.html'>lollipop chart</a> is an alernative to the more usual <a href='https://www.python-graph-gallery.com/barplot'>barplot</a>. <code>Python</code> allows to build lollipops thanks to the <code>matplotlib</code> library, as shown in the examples below. The strategy here is to use the <code>stem()</code> function or to hack the <code>vline()</code> function depending on your input format.</p>\";\n\n\nconst quickCode = `# Create a dataframe\nimport pandas as pd\ndf = pd.DataFrame({'group':list(map(chr, range(65, 85))), 'values':np.random.uniform(size=20) })\n\n# Reorder it following the values:\nordered_df = df.sort_values(by='values')\nmy_range=range(1,len(df.index)+1)\n\n# Make the plot\nplt.stem(ordered_df['values'])\nplt.xticks( my_range, ordered_df['group'])\n`\n\n\nexport default function Lollipop() {\n\n  return (\n\n    <Layout title=\"Lollipop chart\" isTocEnabled seoDescription=\"A collection of lollipop plot examples made with Python, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Lollipop plot\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>A <code>lollipop plot</code> displays each element of a dataset as a segment and a\n            circle.</p>\n            <p> This is doable with <code>python</code> and <code>Matplotlib</code> thanks to\n            the <code>stem()</code> function\n            that accepts a data frame as input.ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/180-basic-lollipop-plot\"}>\n              <ChartImage imgName=\"180_Basic_lolipop_plot2\"\n                caption=\"Most basic lollipop plot with Python & Matplotlib.\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Lollipop plot with <code>Matplotlib</code></h2>\n        <p>\n          <code>Matplotlib</code> is probably the most famous and flexible python library for data visualization.\n          It is appropriate to build any kind of chart, including the\n          lollipop plot thanks to its <code>stem()</code> function.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"180_Basic_lolipop_plot\"\n            caption=\"Most basic lollipop. Will get you started with any kind of input format\"\n            linkTo=\"/180-basic-lollipop-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"181_custom_lolliplot_2\"\n            caption=\"Basic circle customizations: shape, size, color and more.\"\n            linkTo=\"/181-custom-lollipop-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"181_custom_lolliplot_3\"\n            caption=\"Change lollipop baseline position.\"\n            linkTo=\"/181-custom-lollipop-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"182_vertical_lolipop_plot\"\n            caption=\"Horizontal lollipop chart (more readable labels).\"\n            linkTo=\"/182-vertical-lollipop-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"183_highlight_a_group_in_lolipop_plot\"\n            caption=\"Highlight some specific groups in a lollipop.\"\n            linkTo=\"/183-highlight-a-group-in-lollipop\"\n          />\n          <ChartImageContainer\n            imgName=\"184_lolipop_plot_with_2_groups\"\n            caption=\"Cleveland chart: a lollipop chart with 2 subgroups displayed under each row.\"\n            linkTo=\"/184-lollipop-plot-with-2-groups\"\n          />\n          <ChartImageContainer\n            imgName=\"185_lolipop_plot_with_conditional_color\"\n            caption=\"Lollipop chart with conditional colors.\"\n            linkTo=\"/185-lollipop-plot-with-conditional-color\"\n          />\n        </Row>\n      </Container>\n\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"From the web\"><Matplotlib />From the web</h2>\n        <p>The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>).\n          The <a href=\"https://www.python-graph-gallery.com\">Python graph gallery</a> tries to\n          display (or translate from R) some of the best creations and explain how their source\n          code works. If you want to display your work here, please drop me a word or\n          even better, submit a <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">Pull Request</a>!\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={\"/web-lollipop-plot-with-python-mario-kart-64-world-records\"}>\n              <ChartImage imgName={\"web-lollipop-plot-with-python-mario-kart-64-world-records-square\"} caption={\"A highly customized lollipop chart made with Python and Matplotlib. A work by CÃ©dric Scherer to visualize some Mario Kart World records.\"} />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={\"/web-lollipop-plot-with-python-the-office\"}>\n              <ChartImage imgName={\"web-lollipop-plot-with-python-the-office-square\"} caption={\"A highly customized lollipop chart made with Python and Matplotlib to display a timeseries.\"} />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={\"/web-circular-lollipop-plot-with-matplotlib\"}>\n              <ChartImage imgName={\"web-circular-lollipop-plot-with-matplotlib-square\"} caption={\"A circular lollipop plot with customized layout, great color palette and in circle legend.\"} />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","Lollipop","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Matplotlib","href","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}