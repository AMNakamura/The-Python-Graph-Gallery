{"version":3,"file":"component---src-pages-barplot-js-97294e828277ce2d4727.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/barplot.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Seaborn, Matplotlib } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/barplot.html'>barplot</a> shows the relationship between a numeric and a categoric variable. Each entity of the categoric variable is represented as a bar. The size of the bar represents its numeric value. This section shows how to build a barplot with <code>Python</code>, using <code>Matplotlib</code> and <code>Seaborn</code>. Note that this <a target='_blank' href='https://datacamp.pxf.io/YgNDbR'>online course</a> has a chapter dedicated to barplots.\";\n\nconst quickCode = `# Libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Make a random dataset:\nheight = [3, 12, 5, 18, 45]\nbars = ('A', 'B', 'C', 'D', 'E')\ny_pos = np.arange(len(bars))\n\n# Create bars\nplt.bar(y_pos, height)\n\n# Create names on the x-axis\nplt.xticks(y_pos, bars)\n\n# Show graphic\nplt.show()\n`\n\nexport default function Barplot() {\n\n  return (\n\n    <Layout title=\"Barplot\" isTocEnabled seoDescription=\"A collection of barplot examples made with Python, coming with explanation and reproducible code\">\n      <TitleAndDescription\n        title=\"Barplot\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>Matplotlib</code> is pretty convenient to build a barplot thanks to its <code>bar()</code> function. Seaborn works perfectly as well, see its dedicated section.ðŸ”¥</p>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/1-basic-barplot\"}>\n              <ChartImage imgName=\"1_basic_barplot\"\n                caption=\"Most basic barplot with Python & Matplotlib.\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\"><Matplotlib />Barplot with <code>Matplotlib</code></h2>\n        <p>\n          <code>Matplotlib</code> is probably the most famous and flexible python library for data visualization.\n          It is appropriate to build any kind of chart, including the\n          barchart thanks to its <code>bar()</code> function.\n        </p>\n        <p>The examples below should get you started. They go from <Link to=\"/1-basic-barplot\">basic examples</Link> to the details on\n        how to <Link to='/3-control-color-of-barplots'>customize</Link> a barplot appropriately.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"2_horizontal_barplot\"\n            caption=\"Horizontal barplot, handy to make labels more readable.\"\n            linkTo=\"/2-horizontal-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"3_control_color_barplot2\"\n            caption=\"Barplot and color customization.\"\n            linkTo=\"/3-control-color-of-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"3_control_color_barplot4\"\n            caption=\"Change the bar stroke colors.\"\n            linkTo=\"/3-control-color-of-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"4_add_title_and_axe_labels\"\n            caption=\"Title and axis labels with Matplotlib.\"\n            linkTo=\"/4-add-title-and-axis-label\"\n          />\n          <ChartImageContainer\n            imgName=\"5_custom_space_between_bars\"\n            caption=\"Custom bar width. Can be handy to illustrate the sample size.\"\n            linkTo=\"/5-control-width-and-space-in-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"5_custom_width_of_bars\"\n            caption=\"Custom space between bars.\"\n            linkTo=\"/5-control-width-and-space-in-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"6_change_texture\"\n            caption=\"Change bar texture.\"\n            linkTo=\"/3-control-color-of-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"7_increase_margin\"\n            caption=\"More space under X axis to fit long labels.\"\n            linkTo=\"/7-custom-barplot-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"7_custom_label\"\n            caption=\"Customize the bar labels.\"\n            linkTo=\"/7-custom-barplot-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"8_confidence_interval\"\n            caption=\"Barplot with confidence interval.\"\n            linkTo=\"/8-add-confidence-interval-on-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"10_barplot_with_number_of_observations\"\n            caption=\"Highly customized barplot with colors, legend, labels and more.\"\n            linkTo=\"/10-barplot-with-number-of-observation\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\"><Seaborn />Barplot with <code>Seaborn</code></h2>\n        <p>\n          <code>Seaborn</code> is definitely a good alternative to <code>Matplotlib</code> to\n          build a barplot. It comes with a <code>barplot()</code> function that will get you started in minutes.\n        </p>\n        <p>As often, note that the <code>Seaborn</code> alternative allows to write less code\n        to build the chart, but is slighlty more limited in term of customization</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"basic-barplot-with-seaborn1\"\n            caption=\"Most basic barplot with Python and Seaborn\"\n            linkTo=\"/basic-barplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-barplot-with-seaborn2\"\n            caption=\"Make your barplot vertical by swapping the x and y parameters\"\n            linkTo=\"/basic-barplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-barplot-with-seaborn3\"\n            caption=\"Learn how to reorder groups in a seaborn barplot\"\n            linkTo=\"/basic-barplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"error-bars-on-barplot\"\n            caption=\"Add error bars on a seaborn barplot\"\n            linkTo=\"/error-bars-on-barplot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Stacked & Grouped\"><Matplotlib />Stacked and Grouped barplot with <code>Matplotlib</code></h2>\n        <p>\n          <u>Stacked</u> and <u>Grouped</u> barplots are a variation of the more simple barplot. They display\n          the value of a numeric variable for each group and subgroups of a dataset. Subgroups\n          can be stacked (stacked barplot) or set one beside the other (grouped barplot).\n        </p>\n        <p>The three examples below are in-depth tutorial explaining how to build them with Python.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"12_stacked_barplot\"\n            caption=\"How to build a stacked barplot with Python.\"\n            linkTo=\"/12-stacked-barplot-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"12_grouped_barplot\"\n            caption=\"How to build a grouped barplot with Python.\"\n            linkTo=\"/11-grouped-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"12_stacked_percent_barplot\"\n            caption=\"How to build a percent stacked barplot with Python..\"\n            linkTo=\"/13-percent-stacked-barplot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n\n      <Container>\n        <h2 id=\"Stacked & Grouped\"><Seaborn />Stacked and Grouped barplot with <code>Seaborn</code></h2>\n        <p>\n          The <code>barplot()</code> function of <code>seaborn</code> allows to quickly build a grouped barplot. You just\n          have to pass the column used for subgrouping to the <code>hue</code> parameter.\n        </p>\n        <p>It gets a bit more tricky for stacked and percent stacked barplot, but the examples below should\n        hopefully help.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"grouped-barplot1\"\n            caption=\"Grouped barplot with python and seaborn\"\n            linkTo=\"/grouped-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"stacked-barplot-seaborn\"\n            caption=\"Stacked barchart with python and seaborn\"\n            linkTo=\"/stacked-and-percent-stacked-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"stacked-percent-barplot-seaborn\"\n            caption=\"Percent stacked barchart with python and seaborn\"\n            linkTo=\"/stacked-and-percent-stacked-barplot\"\n          />\n        </Row>\n        <div style={{ margin: \"0 auto\" }}>\n          <Link to='/grouped-barplot'>\n            <ChartImage imgName={'grouped-barplot2'} caption={'Grouped barplot with small multiples to show 3 levels of grouping.'} />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"From the web\"><Matplotlib />From the web</h2>\n        <p>The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>).\n          The <a href=\"https://www.python-graph-gallery.com\">Python graph gallery</a> tries to\n          display (or translate from R) some of the best creations and explain how their source\n          code works. If you want to display your work here, please drop me a word or\n          even better, submit a <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">Pull Request</a>!\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to={\"/web-circular-barplot-with-matplotlib\"}>\n              <ChartImage imgName={\"web-circular-barplot-with-matplotlib-square\"} caption={\"A circular barchart with several features per group made with Python and Matplotlib.\"} />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={\"/web-horizontal-barplot-with-labels-the-economist\"}>\n              <ChartImage imgName={\"web-horizontal-barplot-with-labels-the-economist-square\"} caption={\"Lear how to mimick the style of the Economist on this horizontal barplot.\"} />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={\"/web-heatmap-and-radial-barchart-plastics\"}>\n              <ChartImage imgName={\"web-heatmap-and-radial-barchart-plastics-square2\"} caption={\"How to combine a heatmap with a radial barplot on the same figure with heaps of visual tweaks.\"} />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","Barplot","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Matplotlib","Seaborn","style","margin","href","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}