"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[7219],{8742:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7294),r=n(4051),o=n(1555),l=n(818),c=n(8447),i=n(5584);const s={distribution:"Distribution",correlation:"Correlation",ranking:"Ranking",partOfAWhole:"Part Of A Whole",evolution:"Evolution",map:"Map",flow:"Flow",general:"General Knowledge"};function m(e){let{chartFamily:t}=e;const n=c.c.filter((e=>e.family===t)).map(((e,t)=>{const n=(0,i.y)(e.pythonURL);return a.createElement(o.Z,{key:t,xs:4,md:2,className:"col-1-7"},a.createElement(l.Z,{link:n,chartType:e.logo,caption:e.label}))}));return a.createElement("div",{style:{paddingBottom:15}},a.createElement("h2",{id:"Related charts",className:"sectionTitle "+t},null==s?void 0:s[t]),a.createElement(r.Z,null,n))}},7128:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7294),r=n(1883),o=n(8032);const l=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function c(e){let{imgName:t,caption:n}=e;if(l.includes(t))return a.createElement("p",null,"TODO");const c=(0,r.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return c?a.createElement(a.Fragment,null,a.createElement("div",{className:"chartImageContainer"},a.createElement(o.G,{image:c.node.childImageSharp.gatsbyImageData,alt:n,className:"chartImageImg"}),n&&a.createElement("div",{className:"chartImageOverlay"},a.createElement("div",{className:"chartImageOverlayText"},a.createElement("p",null,n))))):null}},4596:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7294),r=n(7128),o=n(1555),l=n(1883);function c(e){let{imgName:t,caption:n,linkTo:c}=e;return a.createElement(o.Z,{xs:12,md:4},a.createElement(l.Link,{to:c},a.createElement(r.Z,{imgName:t,caption:n})))}},9389:function(e,t,n){n.d(t,{H:function(){return r}});var a=n(7294);const r=e=>{let{title:t,seoDescription:n,keywords:r}=e;return a.createElement(a.Fragment,null,a.createElement("title",null,t),a.createElement("link",{href:"https://fonts.googleapis.com/css?family=Roboto|Montserrat",rel:"stylesheet"}),a.createElement("link",{href:"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap",rel:"stylesheet"}),a.createElement("meta",{name:"description",content:n||"How to build a chart with Python"}),a.createElement("meta",{name:"author",content:"Yan Holtz"}),a.createElement("meta",{name:"keywords",content:r||"python, chart, graph, code, viz, dataviz"}),a.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),a.createElement("meta",{property:"og:title",content:t+" | The Python Graph Gallery"}),a.createElement("meta",{property:"og:image",content:"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),a.createElement("meta",{property:"og:description",content:n}),a.createElement("meta",{name:"twitter:image",content:"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),a.createElement("script",null,'(function (w, d) {\n               w.adthrive = w.adthrive || {};\n               w.adthrive.cmd = w.adthrive.cmd || [];\n               w.adthrive.plugin = "adthrive-ads-manual";\n               w.adthrive.host = "ads.adthrive.com";\n               var s = d.createElement("script");\n               s.async = true;\n               s.referrerpolicy = "no-referrer-when-downgrade";\n               s.src =\n                 "https://" +\n                 w.adthrive.host +\n                 "/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=" +\n                 w.encodeURIComponent(w.location.href) +\n                 "&cb=" +\n                 (Math.floor(Math.random() * 100) + 1);\n               var n = d.getElementsByTagName("script")[0];\n               n.parentNode.insertBefore(s, n);\n             })(window, document);'))}},818:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(1883),r=n(7294),o=n(5128);const l=n(8447).c.filter((e=>"general"===e.family)).map((e=>e.logo));function c(e){let{chartType:t,caption:n,link:c}=e;const i=l.includes(t);return r.createElement(r.Fragment,null,i?r.createElement("div",{className:"sectionLogoContainer"},r.createElement(a.Link,{to:c},r.createElement(o.Z,{chartType:t})),r.createElement("p",{className:"sectionLogoCaption"},n)):r.createElement(r.Fragment,null,r.createElement("div",{className:"sectionLogoContainer"},r.createElement(a.Link,{to:c},r.createElement(o.Z,{chartType:t}),r.createElement("div",{className:"sectionLogoOverlay"},r.createElement("div",{className:"sectionLogoOverlayText"},"+")))),r.createElement("p",{className:"sectionLogoCaption"},n)))}},429:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7294),r=n(5005),o=n(1883),l=n(8447),c=n(5584),i=n(682),s=n(5128);function m(e){let{title:t,description:n,chartType:s}=e;const m=l.c.filter((e=>e.id===s))[0];return a.createElement(i.Z,null,a.createElement("div",{className:"titleAndDescription"},a.createElement("div",{className:"titleRow"},a.createElement("h1",null,t),s&&a.createElement(d,{chartType:s})),a.createElement("hr",{className:"smallHr"}),"string"==typeof n?a.createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:n}}):a.createElement("div",{className:"description"},n),s&&a.createElement("div",{style:{marginTop:"10px"}},a.createElement(o.Link,{to:(0,c.y)(m.pythonURL)},a.createElement(r.Z,{size:"sm"},m.label+" section")),a.createElement("a",{href:m.dataToVizURL},a.createElement(r.Z,{size:"sm"},"About this chart")))))}const d=e=>{let{chartType:t}=e;const n=l.c.filter((e=>e.id===t))[0],r=(0,c.y)(n.pythonURL);return a.createElement("div",{style:{width:"80px",marginLeft:40}},a.createElement(o.Link,{to:r},a.createElement(s.Z,{chartType:n.logo})))}},7850:function(e,t,n){n.r(t),n.d(t,{Head:function(){return f},default:function(){return E}});var a=n(7294),r=n(429),o=n(1433),l=n(682),c=n(1190),i=n(4051),s=n(4596),m=n(8742),d=n(1883),h=n(3921),u=n(5005),p=n(9389);const g="<p>A <a href='https://www.data-to-viz.com/graph/network.html'>Network diagram</a> (or chart, or graph) show interconnections between a set of entities. Each entity is represented by a node (or vertices). Connection between nodes are represented through links (or edges). This section mainly focuses on <code>NetworkX</code>, probably the best library for this kind of chart with <code>python</code>.",f=()=>a.createElement(p.H,{title:"Network chart",seoDescription:"A collection of network chart examples made with Python, coming with explanation and reproducible code"});function E(){return a.createElement(o.Z,{isTocEnabled:!0},a.createElement(r.Z,{title:"Network chart",description:g}),a.createElement(l.Z,null,a.createElement("h2",{id:"NetworkX"},"Network diagram with the ",a.createElement("code",null,"NetworkX")," library"),a.createElement("p",null,a.createElement("a",{href:"https://networkx.org"},"NetworkX")," is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.."),a.createElement("p",null,"The examples below will guide you through a migration dataset already discussed in"," ",a.createElement("a",{href:"https://www.data-to-viz.com/graph/chord.html"},"data-to-viz.com"),". It starts by describing the input dataset and the basic usage of the"," ",a.createElement("code",null,"Chord()")," function."),a.createElement("a",{href:"https://networkx.org"},a.createElement(u.Z,{size:"sm"},"Official doc")),a.createElement("br",null),a.createElement("br",null),a.createElement(i.Z,null,a.createElement(s.Z,{imgName:"320_Network_start_simple",caption:"Most basic network chart with Python and NetworkX",linkTo:"/320-basic-network-from-pandas-data-frame"}),a.createElement(s.Z,{imgName:"321_Network_custom_look4",caption:"Custom network appearance: color, shape, size, links",linkTo:"/321-custom-networkx-graph-appearance"}),a.createElement(s.Z,{imgName:"322_Network_layout4",caption:"Control the layout used for the node location",linkTo:"/322-network-layout-possibilities"}),a.createElement(s.Z,{imgName:"323_Network_direction1",caption:"Manage directed and undirected networks by adding arrows",linkTo:"/323-directed-or-undirected-network"}),a.createElement(s.Z,{imgName:"326_Network_background_color",caption:"Control the background color of a network chart",linkTo:"/326-background-colour-of-network-chart"}),a.createElement(s.Z,{imgName:"500-network-chart-with-edge-bundling",caption:"Bundles network edges together to reduce the figure visual clutter",linkTo:"/500-network-chart-with-edge-bundling"})),a.createElement("br",null),a.createElement("p",null,"A common need when dealing with network charts is to map a numeric or categorical variable to the nodes or edges appearance. This is totally doable and adds some insight to the figure."),a.createElement(i.Z,null,a.createElement(s.Z,{imgName:"324_Network_mapcolor1",caption:"Map a continuous or categoric variable to nodes",linkTo:"/324-map-a-color-to-network-nodes"}),a.createElement(s.Z,{imgName:"325_Network_mapcolorttoedge1",caption:"Map a color to edges",linkTo:"/325-map-colour-to-the-edges-of-a-network"}))),a.createElement(h.Z,null),a.createElement(l.Z,null,a.createElement("h2",{id:"Similarity matrix"},"Network chart from similarity matrix"),a.createElement("p",null,"Another commin task is to build a network chart from a correlation matrix. Let's say you have several numeric variables describing some items in a dataset. You can compute a similarity matrix and display it as a network chart. This process is described in the",a.createElement(d.Link,{to:"/327-network-from-correlation-matrix"},"post #327")," ","below."),a.createElement(i.Z,null,a.createElement(s.Z,{imgName:"327_Network_from_correlation",caption:"Network chart from correlation matrix with Python and NetworkX",linkTo:"/327-network-from-correlation-matrix"}))),a.createElement(h.Z,null),a.createElement(l.Z,null,a.createElement("h2",{id:"Graph-tool"},"Network diagram with ",a.createElement("code",null,"graph-tool")),a.createElement("p",null,"The ",a.createElement("a",{href:"https://graph-tool.skewed.de"},"graph tool")," library is a python library implemented in C++. It makes it highly efficient to draw networks containing many nodes. Graphics to come."),a.createElement("a",{href:"https://graph-tool.skewed.de"},a.createElement(u.Z,{size:"sm"},"Official doc"))),a.createElement(h.Z,null),a.createElement("div",{className:"greySection",id:"related"},a.createElement(l.Z,null,a.createElement(m.Z,{chartFamily:"flow"}))),a.createElement(h.Z,null),a.createElement(l.Z,null,a.createElement(c.Z,null)),a.createElement(h.Z,null))}},1555:function(e,t,n){var a=n(4184),r=n.n(a),o=n(7294),l=n(6792),c=n(5893);const i=o.forwardRef(((e,t)=>{const[{className:n,...a},{as:o="div",bsPrefix:i,spans:s}]=function({as:e,bsPrefix:t,className:n,...a}){t=(0,l.vE)(t,"col");const o=(0,l.pi)(),c=(0,l.zG)(),i=[],s=[];return o.forEach((e=>{const n=a[e];let r,o,l;delete a[e],"object"==typeof n&&null!=n?({span:r,offset:o,order:l}=n):r=n;const m=e!==c?`-${e}`:"";r&&i.push(!0===r?`${t}${m}`:`${t}${m}-${r}`),null!=l&&s.push(`order${m}-${l}`),null!=o&&s.push(`offset${m}-${o}`)})),[{...a,className:r()(n,...i,...s)},{as:e,bsPrefix:t,spans:i}]}(e);return(0,c.jsx)(o,{...a,ref:t,className:r()(n,!s.length&&i)})}));i.displayName="Col",t.Z=i},4051:function(e,t,n){var a=n(4184),r=n.n(a),o=n(7294),l=n(6792),c=n(5893);const i=o.forwardRef((({bsPrefix:e,className:t,as:n="div",...a},o)=>{const i=(0,l.vE)(e,"row"),s=(0,l.pi)(),m=(0,l.zG)(),d=`${i}-cols`,h=[];return s.forEach((e=>{const t=a[e];let n;delete a[e],null!=t&&"object"==typeof t?({cols:n}=t):n=t;const r=e!==m?`-${e}`:"";null!=n&&h.push(`${d}${r}-${n}`)})),(0,c.jsx)(n,{ref:o,...a,className:r()(t,i,...h)})}));i.displayName="Row",t.Z=i}}]);
//# sourceMappingURL=component---src-pages-network-chart-js-ac8a9df35dae85cf72a3.js.map