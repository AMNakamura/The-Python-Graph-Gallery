{"version":3,"file":"component---src-pages-seaborn-js-5afc12e339483512e4a0.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/pages/seaborn.js"],"sourcesContent":["import \"./chartImage.css\";\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst allGifs = [\"animated_chart\", \"animated_gapminder.gif\", \"animated_volcano.gif\"]\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n\n  if (allGifs.includes(imgName)) {\n    return (\n      <p>TODO</p>)\n  }\n\n  const data = useStaticQuery(graphql`query MyQuery {\n  allFile(filter: {relativeDirectory: {eq: \"graph\"}}) {\n    edges {\n      node {\n        id\n        name\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n}`);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return <>\n    <div className=\"chartImageContainer\">\n      <GatsbyImage\n        image={image.node.childImageSharp.gatsbyImageData}\n        alt={caption}\n        className=\"chartImageImg\" />\n      <div className=\"chartImageOverlay\">\n        <div className=\"chartImageOverlayText\">\n          <p>{caption}</p>\n        </div>\n      </div>\n    </div>\n  </>;\n}\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","\nimport React from \"react\";\nimport TitleAndDescription from \"../components/TitleAndDescription\";\nimport Layout from \"../components/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Contact from \"../components/Contact\";\nimport Row from \"react-bootstrap/Row\";\nimport ChartImageContainer from \"../components/ChartImageContainer\";\nimport ChartFamilySection from \"../components/ChartFamilySection\";\nimport { Link } from \"gatsby\";\nimport { Matplotlib, Seaborn } from \"../components/MiscellaneousLogos\"\nimport { Col } from \"react-bootstrap\";\nimport CodeChunk from \"../components/CodeChunk\"\nimport ChartImage from \"../components/ChartImage\";\nimport Spacing from \"../components/Spacing\";\nimport { Button } from \"react-bootstrap\";\n\nconst chartDescription =\n  \"<p><code>Seaborn</code> is a python graphic library built on top of <a href='https://www.python-graph-gallery.com/matplotlib'>matplotlib</a>. It allows to make your charts prettier with less code. This page provides general seaborn tips. Visit individual chart sections if you need a specific type of plot. Note that most of the <a href='https://www.python-graph-gallery.com/matplotlib'>matplotlib customization options</a> also work for <code>seaborn</code>.</p > \";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# use the function regplot to make a scatterplot\nsns.regplot(x=df[\"sepal_length\"], y=df[\"sepal_width\"])\n`\n\n\n\nexport default function SeabornLib() {\n\n  return (\n\n    <Layout title=\"Seaborn\" isTocEnabled seoDescription=\"A collection of chart examples made with Seaborn, coming with explanation and reproducible code\">\n\n      <TitleAndDescription\n        title=\"Seaborn\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p><code>seaborn</code> offers some specific functions for almost every kind of charts. For instance, <code>regplot()</code> can be used to build a <Link to='/scatter-plot'>scatterplot</Link>.</p>\n            <p>Note that no additional code is needed to get the nice grey background with grid and some good defaults for the dots üòç. That's 4 lines of code for a pretty decent chart üî•!</p>\n            <Link to=\"/scatter-plot\">\n              <Button size=\"sm\">Scatterplot section</Button>\n            </Link>\n          </Col>\n          <Col md={6}>\n            <Link to={\"/40-basic-scatterplot-seaborn\"}>\n              <ChartImage imgName=\"40_Basic_Scatterplot_seaborn\"\n                caption=\"Basic boxplot with Python and Seaborn from various data input formats.\" />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Lexicon\"><Matplotlib />Basic vocabulary</h2>\n        <p>\n          Since <code>seaborn</code> is built on top of <code>matplotlib</code>, most of its concepts and vocabulary are still correct. The figure below describes the anatomy of a <code>matplotlib</code> charts. It names all the main components,\n          names that you need to know to understand the documentation properly.\n        </p>\n        <p>\n          &#9888;&#65039; <u>Disclaimer</u>: this figure comes from the very complete <a href='https://matplotlib.org/faq/usage_faq.html#coding-styles'>matplotlib documentation</a>. Have a look at it\n          for a thorough explanation on how this library works.\n        </p>\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: 30 }}>\n          <ChartImage imgName={'matplotlib_vocabulary'} caption={'Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly'} />\n        </div>\n        <a href='https://matplotlib.org/faq/usage_faq.html#coding-styles'>\n          <Button size=\"sm\">Matplotlib doc</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Main functions\">üßê Main <code>seaborn</code> functions</h2>\n        <p>\n          Here is an overview of the most common <code>seaborn</code> functions. It provides\n          a glimpse of they're made for, what are their parameters and links to their official\n          doc.\n        </p>\n        <p><code>Todo</code> üòû</p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Title\"><Seaborn />Customizing titles with Seaborn</h2>\n        <p>\n          Since <code>Seaborn</code> is built on top of <code>Matplotlib</code>, title customization\n          works pretty much the same. A seaborn chart (like the one you get with <code>sns.boxplot()</code>) actually\n          returns a <code>matplotlib</code> axes instance.\n        </p>\n        <p>This means that you will not be able to use the usual <code>pyplot</code> method <code>plt.title()</code>, but will have to use\n           the corresponding argument for an <code>axes</code> which is <code>ax.set_title()</code>. This is described more in depth in this dedicated post:\n           </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"seaborn-title-customization\"\n            caption=\"Add a title on a seaborn chart\"\n            linkTo=\"/seaborn-title-customization\"\n          />\n        </Row>\n        <br /><br />\n        <p>\n          Once you've understood how to add a title, customizing it should work the same as for <code>matplotlib</code>:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"190_Custom_title6\"\n            caption=\"Python chart with subtitle and custom color\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title7\"\n            caption=\"Add a math formula in title with Matplotlib\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title5\"\n            caption=\"Control the height of the matplotlib title\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n\n      <Container>\n        <h2 id=\"Axis\"><Seaborn />Customizing axis</h2>\n        <p>\n          The exact same concept than explained for titles above applies for axes. So please read the following blogpost about axis customization\n          with matplotlib and apply it to your seaborn chart.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"191_Custom_axis1\"\n            caption=\"Change the axis title and its appearance\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis2\"\n            caption=\"Control axis labels and ticks look\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis6\"\n            caption=\"Control axis limit with the xlim() function\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n        </Row>\n      </Container>\n\n\n      <Spacing />\n\n\n      <Container>\n        <h2 id=\"Themes\">üåà Seaborn built-in themes</h2>\n        <p>\n          Seaborn comes with a few built-in themes. Those themes are available through the <code>set_style()</code> function. Here is an overview of what is offered.\n        </p>\n        <p><code>Todo</code> üòû</p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">‚≠ê Seaborn graph gallery</h2>\n        <p>\n          If you're interested in a specific type of chart like <Link to='/boxplot'>boxplot</Link> or <Link to='heatmap'>heatmap</Link>, I suggest to\n          visit the <Link to='/'>dedicated section</Link> of the gallery. In case you're interested in what <code>seaborn</code> can do, here\n          is a glimpse of what's offered in the gallery üßê.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot1\"\n            caption=\"Histogram can be added around a scatterplot to show each variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"74_density_plot_multi_variables\"\n            caption=\"Density chart with several displayed groups\"\n            linkTo=\"/74-density-plot-of-several-variables\"\n          />\n          <ChartImageContainer\n            imgName=\"43_seaborn_map_color_to_a_avariable3\"\n            caption=\"Color dots according to a group\"\n            linkTo=\"/43-use-categorical-variable-to-color-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"58_Number_of_obs_on_violinplot_seaborn\"\n            caption=\"Show the number of observations per group\"\n            linkTo=\"/58-show-number-of-observation-on-violinplot\"\n          />\n          <ChartImageContainer\n            imgName=\"73_Control_bandwidth_densityplot_Seaborn2\"\n            caption=\"Changed the bandwidth used to compute the density\"\n            linkTo=\"/73-control-bandwidth-of-seaborn-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"91_Custom_heat_annotate_cells\"\n            caption=\"Seaborn heatmap customization: show numbers in cell\"\n            linkTo=\"/91-customize-seaborn-heatmap\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables1\"\n            caption=\"Compare the distribution of several groups on the same chart\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"80_bivariate_kernel_density_plot2\"\n            caption=\"Basic contourplot with seaborn.\"\n            linkTo=\"/80-contour-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"111_Correlogram_custom4\"\n            caption=\"Apply colors to each group and customized the scatterplot\"\n            linkTo=\"/111-custom-correlogram\"\n          />\n          <ChartImageContainer\n            imgName=\"85_2D_density_plot_matplotlib_1\"\n            caption=\"Basic 2d density chart.\"\n            linkTo=\"/85-density-plot-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables2\"\n            caption=\"Use small multiple to compare the distribution of several groups\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot6\"\n            caption=\"Histogram can be added around a 2d density chart to show x and y variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"51_Horizontal_violinplot_Seaborn\"\n            caption=\"Make your violin chart horizontal to make labels more readable\"\n            linkTo=\"/51-horizontal-violinplot\"\n          />\n          <ChartImageContainer\n            imgName=\"132_Matplotlib-connected-scatterplot\"\n            caption=\"Basic connected scatterplot with Python and Seaborn.\"\n            linkTo=\"/132-basic-connected-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"92_Control_color_heatmap1\"\n            caption=\"Color customization: how to select other color palettes and more\"\n            linkTo=\"/92-control-color-in-seaborn-heatmaps\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n\n    </Layout >\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","chartDescription","quickCode","SeabornLib","Layout","title","isTocEnabled","seoDescription","TitleAndDescription","description","Container","id","Row","Button","size","CodeChunk","Spacing","Matplotlib","href","style","maxWidth","margin","padding","Seaborn","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}