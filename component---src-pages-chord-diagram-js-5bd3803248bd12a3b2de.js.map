{"version":3,"file":"component---src-pages-chord-diagram-js-5bd3803248bd12a3b2de.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/chord-diagram.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script\n        id=\"adthrive\"\n        strategy=\"post-hydrate\"\n        src={getAdThriveScriptUrl()}\n      />\n    </>\n  );\n};\n\n// Tried the idle strategy for AdThrive script put reported as unperformant by Raptive.\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/chord.html'>chord diagram</a> represents flows or connections between several entities (called nodes). Each entity is represented by a fragment on the outer part of the circular layout. Then, arcs are drawn between each entities. The size of the arc is proportional to the importance of the flow.\";\n\nexport const Head = () => (\n  <SEO\n    title=\"Chord diagram\"\n    seoDescription=\"A collection of chord diagram examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Chord() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Chord diagram\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Chord library\">\n          Chord diagram with the <code>Chord</code> library\n        </h2>\n        <p>\n          Chord diagram is not a very usual type of chart. The most common\n          library like <code>Matplotlib</code> and\n          <code>Seaborn</code> will not be of any help to build one.\n          Fortunately, the <code>chord</code> library wraps some functions\n          coming from javascript and the{' '}\n          <a href=\"https://www.d3-graph-gallery.com\">d3.js library</a>.\n        </p>\n        <p>\n          The examples below will guide you through a migration dataset already\n          discussed in{' '}\n          <a href=\"https://www.data-to-viz.com/graph/chord.html\">\n            data-to-viz.com\n          </a>\n          . It starts by describing the input dataset and the basic usage of the{' '}\n          <code>Chord()</code> function.\n        </p>\n        <Link to=\"/chord-diagram-python-chord\">\n          <Button size=\"sm\">Show me the code</Button>\n        </Link>\n        <Row>\n          <ChartImageContainer\n            imgName=\"chord-diagram-chord-library\"\n            caption=\"Most basic chord diagram example from a random matrix.\"\n            linkTo=\"/chord-diagram-python-chord\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Bokeh\">\n          Chord diagram with <code>Bokeh</code>\n        </h2>\n        <p>\n          <a href=\"https://bokeh.org\">Bokeh</a> is a pretty neat python library\n          for data visualization. It provides a <code>chord_from_df()</code>{' '}\n          function dedicated to chord diagram.\n        </p>\n        <p>\n          The example below comes straight from their{' '}\n          <a href=\"https://docs.bokeh.org/en/0.12.5/docs/gallery/chord_chart.html\">\n            documentation\n          </a>\n          . It represents the relationship between each character of the book{' '}\n          <i>Les misérables</i>.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/231-chord-diagram-with-bokeh\">\n            <ChartImage\n              imgName={'231_Chord_Bokeh'}\n              caption={'Simple chord diagram with the Bokeh python library'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotly\">\n          Chord diagram with <code>Plotly</code>\n        </h2>\n        <p>\n          <code>plotly</code> is a powerful python library for data\n          visualization and also allows to build chord diagrams. The good part\n          is that it builds interactive charts. However if comes with a lot of\n          code complexity so be ready to spend several hours before getting your\n          first figure. &#128542;\n        </p>\n        <p>\n          The example below shows the relationship between several people on\n          facebook. Have a look to the{' '}\n          <a href=\"https://plotly.com/python/v3/filled-chord-diagram/\">\n            plotly doc\n          </a>{' '}\n          for explanation and code. Hover over a connection to get names and\n          flow value.\n        </p>\n        <div className=\"mx-auto\">\n          <iframe\n            src=\"/interactiveCharts/plotly_chord_diagram.html\"\n            title=\"chord diagram with plotly\"\n            style={{ border: 'none', width: '800px', height: '500px' }}\n          ></iframe>\n        </div>\n        <a href=\"https://plotly.com/python/v3/filled-chord-diagram/\">\n          <Button size=\"sm\">See code</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Chord library\">\n          Chord diagram with the <code>Mne</code> library\n        </h2>\n        <p>\n          The <code>mne</code> library has been written for neuroscience\n          purposes, but it comes with some handy functions when it comes to\n          build chord diagrams. Visit the examples below to learn the basics and\n          more!\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"406-chord-diagram_mne1\"\n            caption=\"Most basic chord diagram with the mne library.\"\n            linkTo=\"/406-chord-diagram_mne\"\n          />\n          <ChartImageContainer\n            imgName=\"406-chord-diagram_mne2\"\n            caption=\"Learn how to customize node, links, labels and more.\"\n            linkTo=\"/406-chord-diagram_mne\"\n          />\n          <ChartImageContainer\n            imgName=\"406-chord-diagram_mne3\"\n            caption=\"How to split nodes in groups.\"\n            linkTo=\"/406-chord-diagram_mne\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"flow\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","allGifs","ChartImage","imgName","includes","image","useStaticQuery","allFile","edges","find","n","node","name","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Link","to","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","content","property","Script","strategy","src","generalList","info","isGeneralFamily","SectionLogo","TitleAndDescription","description","chartInfo","Container","ChartTypeLink","dangerouslySetInnerHTML","__html","marginTop","Button","size","dataToVizURL","_ref2","chartDescription","url","width","marginLeft","Head","Chord","Layout","isTocEnabled","Spacing","maxWidth","margin","padding","border","height","Contact","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}