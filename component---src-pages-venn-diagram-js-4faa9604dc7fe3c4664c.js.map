{"version":3,"file":"component---src-pages-venn-diagram-js-4faa9604dc7fe3c4664c.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/venn-diagram.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\nimport { Script } from 'gatsby';\n\nfunction getAdThriveScriptUrl() {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  const w = window;\n  w.adthrive = w.adthrive || {};\n  w.adthrive.cmd = w.adthrive.cmd || [];\n  w.adthrive.plugin = 'adthrive-ads-manual';\n  w.adthrive.host = 'ads.adthrive.com';\n  return (\n    'https://' +\n    w.adthrive.host +\n    '/sites/6434366c7ccf1c58d32ab68f/ads.min.js?referrer=' +\n    w.encodeURIComponent(w.location.href) +\n    '&cb=' +\n    (Math.floor(Math.random() * 100) + 1)\n  );\n}\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto|Montserrat\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta\n        name=\"twitter:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <Script id=\"adthrive\" strategy=\"idle\" src={getAdThriveScriptUrl()} />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport ChartImage from '../components/ChartImage';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/venn.html'>Venn Diagram</a> (also called <code>primary diagram</code>, <code>set diagram</code> or <code>logic diagram</code>) is a diagram that shows all possible logical relationships between a finite collection of different sets. Fortunately, the <code>matplotlib_venn</code> library allows to build one easily with Python.</p>\";\n\nconst quickCode = `# library\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2\n\n# Use the venn2 function\nvenn2(subsets = (10, 5, 2), set_labels = ('Group A', 'Group B'))\nplt.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Venn Diagram\"\n    seoDescription=\"A collection of Venn Diagram examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Venn() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Venn Diagram\"\n        description={chartDescription}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              The <code>venn2</code> function of the{' '}\n              <code>matplotlib_venn</code> library is the best way to make a\n              Venn Diagram with Python, as shown on the code below.\n            </p>\n            <p>\n              {' '}\n              Note that several input formats are possible to get there. This\n              first post of the section goes through them and should get you\n              started from any kind of input. 🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/170-basic-venn-diagram-with-2-groups'}>\n              <ChartImage\n                imgName=\"170_Basic_Venn_Diagram\"\n                caption=\"Most basic Venn Diagram with Python\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Matplotlib-venn pkg\">\n            &#8505; &#65039; A note on the <code>Matplotlib-venn</code> library\n          </h2>\n          <p>\n            The <code>matplotlib-venn</code> library has been created by{' '}\n            <a href=\"https://github.com/konstantint/matplotlib-venn\">\n              Konstantin Tretyakov\n            </a>\n            . Its official documentation is available on{' '}\n            <a href=\"https://github.com/konstantint\">github</a>. Take a minute\n            to give him a ⭐ if you use it!\n          </p>\n          <a href=\"https://github.com/konstantint/matplotlib-venn\">\n            <Button size=\"sm\">Matplotlib-venn documentation</Button>\n          </a>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Venn Diagram with <code>Matplotlib</code> and{' '}\n          <code>matplotlib-venn</code>\n        </h2>\n        <p>\n          <code>Matplotlib</code> is probably the most famous and flexible\n          python library for data visualization. It is appropriate to build any\n          kind of chart, including the lollipop plot thanks to its{' '}\n          <code>stem()</code> function.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"171_Basic_Venn_3-groups\"\n            caption=\"Venn Diagram with 3 sets.\"\n            linkTo=\"/171-basic-venn-diagram-with-3-groups\"\n          />\n          <ChartImageContainer\n            imgName=\"172_custom_venn_diagram3\"\n            caption=\"Customize Venn Diagram: circles, lables and more.\"\n            linkTo=\"/172-custom-venn-diagram\"\n          />\n          <ChartImageContainer\n            imgName=\"174_Change_Background_color_venn\"\n            caption=\"Change Venn diagram background color.\"\n            linkTo=\"/174-change-background-colour-of-venn-diagram\"\n          />\n        </Row>\n        <p>\n          The <code>Venn2()</code> function allows to customize the venn diagram\n          as much as you want, allowing to build some pretty neat figures as\n          below:\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto' }}>\n          <Link to=\"/173-elaborated-venn-diagram\">\n            <ChartImage\n              imgName={'173_elaborated_Venn_diagram'}\n              caption={\n                'The matplotlib-venn library allows a high level of customization. Here is an example taking advantage of it'\n              }\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"UpSet Chart\">Upset plot as an alternative</h2>\n        <p>\n          Venn diagrams are great to visualize the intersection between 2 or 3\n          sets. Above that they become quite{' '}\n          <a href=\"https://www.data-to-viz.com/graph/venn.html\">\n            messy and unreadable\n          </a>\n          .\n        </p>\n        <p>\n          There is a alternative to them: the upSet plot that can be made thanks\n          to the <a href=\"https://pypi.org/project/UpSetPlot/\">upSetPlot</a>{' '}\n          library\n        </p>\n        <a href=\"https://pypi.org/project/UpSetPlot/\">\n          <Button size=\"sm\">Show me!</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"partOfAWhole\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","getAdThriveScriptUrl","window","w","adthrive","cmd","plugin","host","encodeURIComponent","location","href","Math","floor","random","SEO","title","seoDescription","keywords","rel","content","property","Script","id","strategy","src","chartDescription","quickCode","Head","Venn","Layout","isTocEnabled","TitleAndDescription","description","Container","Row","CodeChunk","Spacing","Button","size","Matplotlib","style","maxWidth","margin","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}