{"version":3,"file":"component---src-pages-best-python-chart-examples-js-b4b71660aca4c60ffc06.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/best-python-chart-examples.js","webpack://the-python-graph-gallery/./src/util/list-of-best-charts.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({ title, description, chartType }) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from 'gatsby';\nimport { Button, Col } from 'react-bootstrap';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { listOfBestCharts } from '../util/list-of-best-charts';\n\nconst chartDescription = (\n  <>\n    <p>\n      The <a href=\"/\">Python Graph Gallery</a> has always been a reservoir of\n      inspiration, providing <b>hundreds of foundational chart examples</b> for\n      newcomers and seasoned developers alike.{' '}\n    </p>\n    <p>\n      While our vast collection offers a stepping stone into the world of data\n      visualization, <b>the following list stands out</b>.\n    </p>\n    <p>\n      Every chart here represents the pinnacle of craftsmanship, exhibiting the\n      depths to which <Link href=\"/matplotlib\">matplotlib</Link> can be\n      customized. These are not just graphs; they are polished masterpieces,\n      ready for publication.\n    </p>\n    <p>\n      While I'm deeply indebted to the <b>original authors</b> for their stellar\n      work, it's worth noting that many of these visualizations were first\n      conceived in <a href=\"https://www.r-graph-gallery.com\">R</a>, a testament\n      to its rich visualization ecosystem. In an endeavor to{' '}\n      <b>bring the best to our Python community</b>, I've translated these gems\n      to further showcase the versatility and power of matplotlib.\n    </p>\n    <p>Dive in and get inspired! 😍</p>\n  </>\n);\n\nexport default function Beeswarm() {\n  return (\n    <Layout\n      title=\"Best Python Chart Examples\"\n      seoDescription=\"A selection of the best graphs made with python, coming with in-depth tutorials and reproducible code.\"\n    >\n      <TitleAndDescription\n        title=\"Best Python Chart Examples\"\n        description={chartDescription}\n      />\n\n      <Container>\n        {listOfBestCharts.map((chart, i) => {\n          return (\n            <div key={i}>\n              <Row>\n                <Col xs={4} md={6}>\n                  <Link href={'/' + chart.link}>\n                    <ChartImage imgName={chart.img.replace('.png', '')} />\n                  </Link>\n                </Col>\n                <Col xs={4} md={6}>\n                  <h2\n                    style={{\n                      lineHeight: '34px',\n                      fontSize: 22,\n                      marginTop: 40,\n                      paddingBottom: 10,\n                      borderBottom: 'none',\n                    }}\n                  >\n                    {chart.title}\n                  </h2>\n                  <p>{chart.description}</p>\n                  <p style={{ fontSize: 16, color: 'grey' }}>\n                    <i>\n                      <span>by </span>\n                      {chart.author}\n                    </i>{' '}\n                  </p>\n                  <Link href={'/' + chart.link}>\n                    <Button size=\"sm\">Read tutorial</Button>\n                  </Link>\n                </Col>\n              </Row>\n              <Spacing />\n            </div>\n          );\n        })}\n\n        <p>\n          Note that I am always <b>hunting for the best charts</b> made with\n          Python! If you have any examples in mind that should be showcased\n          here, please <b>let me know</b> 🙏.\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","export const listOfBestCharts = [\n  {\n    link: 'web-circular-barplot-with-matplotlib',\n    title: 'Circular Barplot',\n    description:\n      'A circular barchart with several features per group made with Python and Matplotlib',\n    img: 'web-circular-barplot-with-matplotlib-square.png',\n    alt: 'clean circular barplot made with Python and Matplotlib',\n    author: 'T. Stadler',\n  },\n  {\n    link: 'web-circular-lollipop-plot-with-matplotlib',\n    title: 'Circular Lollipop Plot',\n    description:\n      'A circular lollipop plot with customized layout, great color palette and in circle legend',\n    img: 'web-circular-lollipop-plot-with-matplotlib-square.png',\n    alt: 'circular lollipop plot made with Python and Matplotlib',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-ggbetweenstats-with-matplotlib',\n    title: 'Violin and Boxplot combination',\n    description:\n      'Allows the comparison of several groups with statistical test results on top',\n    img: 'web-ggbetweenstats-with-matplotlib-square.png',\n    alt: 'Combination of a violin and a boxplot made with Python and Matplotlib',\n    author: 'T. Wang',\n  },\n  {\n    link: 'web-heatmap-and-radial-barchart-plastics',\n    title: 'Circle Heatmap',\n    description:\n      'A heatmap where each cell is filled by a circle with varying size',\n    img: 'web-heatmap-and-radial-barchart-plastics-square1.png',\n    alt: 'Heatmap with varying circle in cells',\n    author: 'M. Siple',\n  },\n  {\n    link: 'web-heatmap-and-radial-barchart-plastics',\n    title: 'Circular barplot',\n    description: 'A circular barplot with small multiples',\n    img: 'web-heatmap-and-radial-barchart-plastics-square2.png',\n    alt: 'Circular barplot with small multiple',\n    author: 'M. Siple',\n  },\n  {\n    link: 'web-highlighted-lineplot-with-faceting',\n    title: 'Line chart with faceting',\n    description:\n      'Several highlighted lineplots arranged in a multi panel layout to explore the evolution of the water source installation rankings by country',\n    img: 'web-highlighted-lineplot-with-faceting-square.png',\n    alt: 'multi panel layout with Python line charts',\n    author: 'A. Madjid',\n  },\n  {\n    link: 'web-horizontal-barplot-with-labels-the-economist',\n    title: 'Horizontal Barplot',\n    description:\n      'A reproduction of an horizontal barplot made by The Economist to showcase the power of Python for dataviz',\n    img: 'web-horizontal-barplot-with-labels-the-economist-square.png',\n    alt: \"Horizonal barplot with the Economist's style\",\n    author: 'The Economist',\n  },\n  {\n    link: 'web-lemurs-parallel-chart',\n    title: 'Parallel chart',\n    description:\n      'A parallel coordinate chart to explore the maximum ages recorded for different species of lemurs with Python and Matplotlib.',\n    img: 'web-lemurs-parallel-chart-square.png',\n    alt: 'Parallel chart made with Python',\n    author: 'G. Karamanis',\n  },\n  {\n    link: 'web-line-chart-with-labels-at-line-end',\n    title: 'Inline labels',\n    description:\n      'Good looking line chart with inline labels at the end of each line',\n    img: 'web-line-chart-with-labels-at-line-end-square.png',\n    alt: 'Line chart with inline labels',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-lineplots-and-area-chart-the-economist',\n    title: 'Line chart from the Economist',\n    description:\n      'Mimicking the style of the Economist to get a clean line chart',\n    img: 'web-lineplots-and-area-chart-the-economist-square1.png',\n    alt: 'Python line chart with style of the Economist',\n    author: 'The Economist',\n  },\n  {\n    link: 'web-lineplots-and-area-chart-the-economist',\n    title: 'Area chart from the Economist',\n    description:\n      'Mimicking the style of the Economist to get a clean area chart',\n    img: 'web-lineplots-and-area-chart-the-economist-square2.png',\n    alt: 'Python area chart with style of the Economist',\n    author: 'The Economist',\n  },\n  {\n    link: 'web-lollipop-plot-with-python-mario-kart-64-world-records',\n    title: 'Lollipop chart',\n    description:\n      'A highly customized lollipop chart showing world records for the Mario Kart 64 racing game on the Nintendo 64',\n    img: 'web-lollipop-plot-with-python-mario-kart-64-world-records-square.png',\n    alt: 'Lollipop Chart made with Python and matplotlib',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-multiple-lines-and-panels',\n    title: 'Line chart with small multiple',\n    description:\n      'A line chart with several groups per panel on a small multiple layout. With a beautiful color palette.',\n    img: 'web-multiple-lines-and-panels-square.png',\n    alt: 'Line chart with several groups per panel on a small multiple layout',\n    author: 'O. Medina',\n  },\n  {\n    link: 'web-radar-chart-with-matplotlib',\n    title: 'Radar chart with matplotlib',\n    description:\n      'A highly customized radar chart with custom annotations and labels to explore the palmerpenguins dataset made with Python and Matplotlib.',\n    img: 'web-radar-chart-with-matplotlib-square.png',\n    alt: 'Radar chart with Matplotlib',\n    author: 'T. Wang',\n  },\n  {\n    link: 'web-scatterplot-astronaut',\n    title: 'Astronaut Scatterplot',\n    description:\n      'A chart made of a scatterplot with variable color, shape, and opacity, and several annotations to explore the relationship between the characteristics of astronauts and space missions',\n    img: 'web-scatterplot-astronaut-square.png',\n    alt: 'Scatterplot with variable color in Python',\n    author: 'C. Thompson',\n  },\n  {\n    link: 'web-scatterplot-text-annotation-and-regression-matplotlib',\n    title: 'Scatterplot with regression fit',\n    description:\n      'A custom scatterplot with an overlayed regression fit and auto-positioned labels to explore the relationship between the Corruption Perceptions Index and Human Development Index',\n    img: 'web-scatterplot-text-annotation-and-regression-matplotlib-square.png',\n    alt: 'Scatterplot with regression fit',\n    author: 'C. O. Wilke',\n  },\n  {\n    link: 'web-stacked-line-chart-with-labels',\n    title: 'Stacked barchart',\n    description:\n      'A clean stacked barplot with nice color palette, some very clean inline labels, a powerful title and slick footer caption with logos.',\n    img: 'web-stacked-line-chart-with-labels-square.png',\n    alt: 'Clean stacked barplot',\n    author: 'G. Fontana',\n  },\n  {\n    link: 'web-streamchart-with-matplotlib',\n    title: 'X-men Streamchart',\n    description:\n      \"A streamchart to explore the appearances of the most popular characters in Chris Claremont's X-Men comics with Python\",\n    img: 'web-streamchart-with-matplotlib.png',\n    alt: 'Streamchart made in Python',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-text-repel-with-matplotlib',\n    title: 'Scatterplot with text repel',\n    description:\n      'A custom scatterplot with auto-positioned labels to explore the palmerpenguins dataset made with Python and Matplotlib',\n    img: 'web-text-repel-with-matplotlib-square.png',\n    alt: 'Scatterplot with smart labels',\n    author: 'T. Wang',\n  },\n  {\n    link: 'web-time-series-and-facetting-with-matplotlib',\n    title: 'Timeseries and faceting',\n    description:\n      'Multiple lineplots with filled areas with a customized layout to explore the evolution of animal rescues across different boroughs in London',\n    img: 'web-time-series-and-facetting-with-matplotlib-square.png',\n    alt: 'Timeseries chart with filled areas and faceting',\n    author: 'G. Karamanis',\n  },\n  {\n    link: 'heatmap-for-timeseries-matplotlib',\n    title: 'Hourly heatmap',\n    description: 'A very clean heatmap used as a timeseries',\n    img: 'heatmap-for-timeseries-matplotlib-square.png',\n    alt: 'A very clean heatmap used as a timeseries',\n    author: 'J. MacKintosh',\n  },\n  {\n    link: 'web-line-chart-small-multiple',\n    title: 'Line chart & small multiple',\n    description:\n      'Small multiple is a dataviz technique allowing to study several groups on the same figure. Repeating all groups but faded out adds some useful context to each section.',\n    img: 'web-line-chart-small-multiple-square.png',\n    alt: 'Line chart with small multiple and all groups faded out',\n    author: 'G. Fontana',\n  },\n];\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","TitleAndDescription","title","description","chartType","chartInfo","chartTypesInfo","filter","chart","id","Container","ChartTypeLink","dangerouslySetInnerHTML","__html","style","marginTop","Link","to","fullUrlToInternalLink","pythonURL","Button","size","label","href","dataToVizURL","_ref2","chartDescription","url","width","marginLeft","SectionLogo","logo","Beeswarm","Layout","seoDescription","listOfBestCharts","map","i","key","Row","Col","xs","md","link","img","replace","lineHeight","fontSize","paddingBottom","borderBottom","color","author","Spacing","Contact","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}